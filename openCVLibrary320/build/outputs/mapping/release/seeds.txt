org.opencv.R
org.opencv.R$attr
org.opencv.R$attr: int camera_id
org.opencv.R$attr: int show_fps
org.opencv.R$id
org.opencv.R$id: int any
org.opencv.R$id: int back
org.opencv.R$id: int front
org.opencv.R$styleable
org.opencv.R$styleable: int[] CameraBridgeViewBase
org.opencv.R$styleable: int CameraBridgeViewBase_camera_id
org.opencv.R$styleable: int CameraBridgeViewBase_show_fps
org.opencv.android.CameraBridgeViewBase: void setCameraIndex(int)
org.opencv.android.CameraBridgeViewBase: void setCvCameraViewListener(org.opencv.android.CameraBridgeViewBase$CvCameraViewListener2)
org.opencv.android.CameraBridgeViewBase: void setCvCameraViewListener(org.opencv.android.CameraBridgeViewBase$CvCameraViewListener)
org.opencv.android.CameraGLSurfaceView: void setCameraTextureListener(org.opencv.android.CameraGLSurfaceView$CameraTextureListener)
org.opencv.android.CameraGLSurfaceView: org.opencv.android.CameraGLSurfaceView$CameraTextureListener getCameraTextureListener()
org.opencv.android.CameraGLSurfaceView: void setCameraIndex(int)
org.opencv.android.StaticHelper
org.opencv.android.StaticHelper: java.lang.String getLibraryList()
org.opencv.android.Utils
org.opencv.android.Utils: void nBitmapToMat2(android.graphics.Bitmap,long,boolean)
org.opencv.android.Utils: void nMatToBitmap2(long,android.graphics.Bitmap,boolean)
org.opencv.calib3d.Calib3d
org.opencv.calib3d.Calib3d: long estimateAffine2D_0(long,long,long,int,double,long,double,long)
org.opencv.calib3d.Calib3d: long estimateAffine2D_1(long,long)
org.opencv.calib3d.Calib3d: long estimateAffinePartial2D_0(long,long,long,int,double,long,double,long)
org.opencv.calib3d.Calib3d: long estimateAffinePartial2D_1(long,long)
org.opencv.calib3d.Calib3d: long findEssentialMat_0(long,long,long,int,double,double,long)
org.opencv.calib3d.Calib3d: long findEssentialMat_1(long,long,long,int,double,double)
org.opencv.calib3d.Calib3d: long findEssentialMat_2(long,long,long)
org.opencv.calib3d.Calib3d: long findEssentialMat_3(long,long,double,double,double,int,double,double,long)
org.opencv.calib3d.Calib3d: long findEssentialMat_4(long,long,double,double,double,int,double,double)
org.opencv.calib3d.Calib3d: long findEssentialMat_5(long,long)
org.opencv.calib3d.Calib3d: long findFundamentalMat_0(long,long,int,double,double,long)
org.opencv.calib3d.Calib3d: long findFundamentalMat_1(long,long,int,double,double)
org.opencv.calib3d.Calib3d: long findFundamentalMat_2(long,long)
org.opencv.calib3d.Calib3d: long findHomography_0(long,long,int,double,long,int,double)
org.opencv.calib3d.Calib3d: long findHomography_1(long,long,int,double)
org.opencv.calib3d.Calib3d: long findHomography_2(long,long)
org.opencv.calib3d.Calib3d: long getOptimalNewCameraMatrix_0(long,long,double,double,double,double,double,double[],boolean)
org.opencv.calib3d.Calib3d: long getOptimalNewCameraMatrix_1(long,long,double,double,double)
org.opencv.calib3d.Calib3d: long initCameraMatrix2D_0(long,long,double,double,double)
org.opencv.calib3d.Calib3d: long initCameraMatrix2D_1(long,long,double,double)
org.opencv.calib3d.Calib3d: double[] getValidDisparityROI_0(int,int,int,int,int,int,int,int,int,int,int)
org.opencv.calib3d.Calib3d: double[] RQDecomp3x3_0(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: double[] RQDecomp3x3_1(long,long,long)
org.opencv.calib3d.Calib3d: boolean findChessboardCorners_0(long,double,double,long,int)
org.opencv.calib3d.Calib3d: boolean findChessboardCorners_1(long,double,double,long)
org.opencv.calib3d.Calib3d: boolean findCirclesGrid_0(long,double,double,long,int)
org.opencv.calib3d.Calib3d: boolean findCirclesGrid_1(long,double,double,long)
org.opencv.calib3d.Calib3d: boolean solvePnP_0(long,long,long,long,long,long,boolean,int)
org.opencv.calib3d.Calib3d: boolean solvePnP_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: boolean solvePnPRansac_0(long,long,long,long,long,long,boolean,int,float,double,long,int)
org.opencv.calib3d.Calib3d: boolean solvePnPRansac_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: boolean stereoRectifyUncalibrated_0(long,long,long,double,double,long,long,double)
org.opencv.calib3d.Calib3d: boolean stereoRectifyUncalibrated_1(long,long,long,double,double,long,long)
org.opencv.calib3d.Calib3d: double calibrateCameraExtended_0(long,long,double,double,long,long,long,long,long,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double calibrateCameraExtended_1(long,long,double,double,long,long,long,long,long,long,long,int)
org.opencv.calib3d.Calib3d: double calibrateCameraExtended_2(long,long,double,double,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: double calibrateCamera_0(long,long,double,double,long,long,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double calibrateCamera_1(long,long,double,double,long,long,long,long,int)
org.opencv.calib3d.Calib3d: double calibrateCamera_2(long,long,double,double,long,long,long,long)
org.opencv.calib3d.Calib3d: double sampsonDistance_0(long,long,long)
org.opencv.calib3d.Calib3d: double stereoCalibrate_0(long,long,long,long,long,long,long,double,double,long,long,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double stereoCalibrate_1(long,long,long,long,long,long,long,double,double,long,long,long,long,int)
org.opencv.calib3d.Calib3d: double stereoCalibrate_2(long,long,long,long,long,long,long,double,double,long,long,long,long)
org.opencv.calib3d.Calib3d: double calibrate_0(long,long,double,double,long,long,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double calibrate_1(long,long,double,double,long,long,long,long,int)
org.opencv.calib3d.Calib3d: double calibrate_2(long,long,double,double,long,long,long,long)
org.opencv.calib3d.Calib3d: double stereoCalibrate_3(long,long,long,long,long,long,long,double,double,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double stereoCalibrate_4(long,long,long,long,long,long,long,double,double,long,long,int)
org.opencv.calib3d.Calib3d: double stereoCalibrate_5(long,long,long,long,long,long,long,double,double,long,long)
org.opencv.calib3d.Calib3d: float rectify3Collinear_0(long,long,long,long,long,long,long,long,double,double,long,long,long,long,long,long,long,long,long,long,long,double,double,double,double[],double[],int)
org.opencv.calib3d.Calib3d: int decomposeHomographyMat_0(long,long,long,long,long)
org.opencv.calib3d.Calib3d: int estimateAffine3D_0(long,long,long,long,double,double)
org.opencv.calib3d.Calib3d: int estimateAffine3D_1(long,long,long,long)
org.opencv.calib3d.Calib3d: int recoverPose_0(long,long,long,long,long,double,double,double,long)
org.opencv.calib3d.Calib3d: int recoverPose_1(long,long,long,long,long,double,double,double)
org.opencv.calib3d.Calib3d: int recoverPose_2(long,long,long,long,long)
org.opencv.calib3d.Calib3d: int recoverPose_3(long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: int recoverPose_4(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void Rodrigues_0(long,long,long)
org.opencv.calib3d.Calib3d: void Rodrigues_1(long,long)
org.opencv.calib3d.Calib3d: void calibrationMatrixValues_0(long,double,double,double,double,double[],double[],double[],double[],double[])
org.opencv.calib3d.Calib3d: void composeRT_0(long,long,long,long,long,long,long,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void composeRT_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void computeCorrespondEpilines_0(long,int,long,long)
org.opencv.calib3d.Calib3d: void convertPointsFromHomogeneous_0(long,long)
org.opencv.calib3d.Calib3d: void convertPointsToHomogeneous_0(long,long)
org.opencv.calib3d.Calib3d: void correctMatches_0(long,long,long,long,long)
org.opencv.calib3d.Calib3d: void decomposeEssentialMat_0(long,long,long,long)
org.opencv.calib3d.Calib3d: void decomposeProjectionMatrix_0(long,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void decomposeProjectionMatrix_1(long,long,long,long)
org.opencv.calib3d.Calib3d: void drawChessboardCorners_0(long,double,double,long,boolean)
org.opencv.calib3d.Calib3d: void filterSpeckles_0(long,double,int,double,long)
org.opencv.calib3d.Calib3d: void filterSpeckles_1(long,double,int,double)
org.opencv.calib3d.Calib3d: void matMulDeriv_0(long,long,long,long)
org.opencv.calib3d.Calib3d: void projectPoints_0(long,long,long,long,long,long,long,double)
org.opencv.calib3d.Calib3d: void projectPoints_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_0(long,long,long,boolean,int)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_1(long,long,long,boolean)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_2(long,long,long)
org.opencv.calib3d.Calib3d: void stereoRectify_0(long,long,long,long,double,double,long,long,long,long,long,long,long,int,double,double,double,double[],double[])
org.opencv.calib3d.Calib3d: void stereoRectify_1(long,long,long,long,double,double,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void triangulatePoints_0(long,long,long,long,long)
org.opencv.calib3d.Calib3d: void validateDisparity_0(long,long,int,int,int)
org.opencv.calib3d.Calib3d: void validateDisparity_1(long,long,int,int)
org.opencv.calib3d.Calib3d: void distortPoints_0(long,long,long,long,double)
org.opencv.calib3d.Calib3d: void distortPoints_1(long,long,long,long)
org.opencv.calib3d.Calib3d: void estimateNewCameraMatrixForUndistortRectify_0(long,long,double,double,long,long,double,double,double,double)
org.opencv.calib3d.Calib3d: void estimateNewCameraMatrixForUndistortRectify_1(long,long,double,double,long,long)
org.opencv.calib3d.Calib3d: void initUndistortRectifyMap_0(long,long,long,long,double,double,int,long,long)
org.opencv.calib3d.Calib3d: void projectPoints_2(long,long,long,long,long,long,double,long)
org.opencv.calib3d.Calib3d: void projectPoints_3(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void stereoRectify_2(long,long,long,long,double,double,long,long,long,long,long,long,long,int,double,double,double,double)
org.opencv.calib3d.Calib3d: void stereoRectify_3(long,long,long,long,double,double,long,long,long,long,long,long,long,int)
org.opencv.calib3d.Calib3d: void undistortImage_0(long,long,long,long,long,double,double)
org.opencv.calib3d.Calib3d: void undistortImage_1(long,long,long,long)
org.opencv.calib3d.Calib3d: void undistortPoints_0(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void undistortPoints_1(long,long,long,long)
org.opencv.calib3d.StereoBM
org.opencv.calib3d.StereoBM: long create_0(int,int)
org.opencv.calib3d.StereoBM: long create_1()
org.opencv.calib3d.StereoBM: double[] getROI1_0(long)
org.opencv.calib3d.StereoBM: double[] getROI2_0(long)
org.opencv.calib3d.StereoBM: int getPreFilterCap_0(long)
org.opencv.calib3d.StereoBM: int getPreFilterSize_0(long)
org.opencv.calib3d.StereoBM: int getPreFilterType_0(long)
org.opencv.calib3d.StereoBM: int getSmallerBlockSize_0(long)
org.opencv.calib3d.StereoBM: int getTextureThreshold_0(long)
org.opencv.calib3d.StereoBM: int getUniquenessRatio_0(long)
org.opencv.calib3d.StereoBM: void setPreFilterCap_0(long,int)
org.opencv.calib3d.StereoBM: void setPreFilterSize_0(long,int)
org.opencv.calib3d.StereoBM: void setPreFilterType_0(long,int)
org.opencv.calib3d.StereoBM: void setROI1_0(long,int,int,int,int)
org.opencv.calib3d.StereoBM: void setROI2_0(long,int,int,int,int)
org.opencv.calib3d.StereoBM: void setSmallerBlockSize_0(long,int)
org.opencv.calib3d.StereoBM: void setTextureThreshold_0(long,int)
org.opencv.calib3d.StereoBM: void setUniquenessRatio_0(long,int)
org.opencv.calib3d.StereoBM: void delete(long)
org.opencv.calib3d.StereoMatcher
org.opencv.calib3d.StereoMatcher: int getBlockSize_0(long)
org.opencv.calib3d.StereoMatcher: int getDisp12MaxDiff_0(long)
org.opencv.calib3d.StereoMatcher: int getMinDisparity_0(long)
org.opencv.calib3d.StereoMatcher: int getNumDisparities_0(long)
org.opencv.calib3d.StereoMatcher: int getSpeckleRange_0(long)
org.opencv.calib3d.StereoMatcher: int getSpeckleWindowSize_0(long)
org.opencv.calib3d.StereoMatcher: void compute_0(long,long,long,long)
org.opencv.calib3d.StereoMatcher: void setBlockSize_0(long,int)
org.opencv.calib3d.StereoMatcher: void setDisp12MaxDiff_0(long,int)
org.opencv.calib3d.StereoMatcher: void setMinDisparity_0(long,int)
org.opencv.calib3d.StereoMatcher: void setNumDisparities_0(long,int)
org.opencv.calib3d.StereoMatcher: void setSpeckleRange_0(long,int)
org.opencv.calib3d.StereoMatcher: void setSpeckleWindowSize_0(long,int)
org.opencv.calib3d.StereoMatcher: void delete(long)
org.opencv.calib3d.StereoSGBM
org.opencv.calib3d.StereoSGBM: long create_0(int,int,int,int,int,int,int,int,int,int,int)
org.opencv.calib3d.StereoSGBM: long create_1(int,int,int)
org.opencv.calib3d.StereoSGBM: int getMode_0(long)
org.opencv.calib3d.StereoSGBM: int getP1_0(long)
org.opencv.calib3d.StereoSGBM: int getP2_0(long)
org.opencv.calib3d.StereoSGBM: int getPreFilterCap_0(long)
org.opencv.calib3d.StereoSGBM: int getUniquenessRatio_0(long)
org.opencv.calib3d.StereoSGBM: void setMode_0(long,int)
org.opencv.calib3d.StereoSGBM: void setP1_0(long,int)
org.opencv.calib3d.StereoSGBM: void setP2_0(long,int)
org.opencv.calib3d.StereoSGBM: void setPreFilterCap_0(long,int)
org.opencv.calib3d.StereoSGBM: void setUniquenessRatio_0(long,int)
org.opencv.calib3d.StereoSGBM: void delete(long)
org.opencv.core.Algorithm
org.opencv.core.Algorithm: java.lang.String getDefaultName_0(long)
org.opencv.core.Algorithm: void clear_0(long)
org.opencv.core.Algorithm: void save_0(long,java.lang.String)
org.opencv.core.Algorithm: void delete(long)
org.opencv.core.Core
org.opencv.core.Core: double[] mean_0(long,long)
org.opencv.core.Core: double[] mean_1(long)
org.opencv.core.Core: double[] sumElems_0(long)
org.opencv.core.Core: double[] trace_0(long)
org.opencv.core.Core: java.lang.String getBuildInformation_0()
org.opencv.core.Core: boolean checkRange_0(long,boolean,double,double)
org.opencv.core.Core: boolean checkRange_1(long)
org.opencv.core.Core: boolean eigen_0(long,long,long)
org.opencv.core.Core: boolean eigen_1(long,long)
org.opencv.core.Core: boolean solve_0(long,long,long,int)
org.opencv.core.Core: boolean solve_1(long,long,long)
org.opencv.core.Core: double Mahalanobis_0(long,long,long)
org.opencv.core.Core: double PSNR_0(long,long)
org.opencv.core.Core: double determinant_0(long)
org.opencv.core.Core: double getTickFrequency_0()
org.opencv.core.Core: double invert_0(long,long,int)
org.opencv.core.Core: double invert_1(long,long)
org.opencv.core.Core: double kmeans_0(long,int,long,int,int,double,int,int,long)
org.opencv.core.Core: double kmeans_1(long,int,long,int,int,double,int,int)
org.opencv.core.Core: double norm_0(long,long,int,long)
org.opencv.core.Core: double norm_1(long,long,int)
org.opencv.core.Core: double norm_2(long,long)
org.opencv.core.Core: double norm_3(long,int,long)
org.opencv.core.Core: double norm_4(long,int)
org.opencv.core.Core: double norm_5(long)
org.opencv.core.Core: double solvePoly_0(long,long,int)
org.opencv.core.Core: double solvePoly_1(long,long)
org.opencv.core.Core: float cubeRoot_0(float)
org.opencv.core.Core: float fastAtan2_0(float,float)
org.opencv.core.Core: int borderInterpolate_0(int,int,int)
org.opencv.core.Core: int countNonZero_0(long)
org.opencv.core.Core: int getNumThreads_0()
org.opencv.core.Core: int getNumberOfCPUs_0()
org.opencv.core.Core: int getOptimalDFTSize_0(int)
org.opencv.core.Core: int getThreadNum_0()
org.opencv.core.Core: int solveCubic_0(long,long)
org.opencv.core.Core: long getCPUTickCount_0()
org.opencv.core.Core: long getTickCount_0()
org.opencv.core.Core: void LUT_0(long,long,long)
org.opencv.core.Core: void PCABackProject_0(long,long,long,long)
org.opencv.core.Core: void PCACompute_0(long,long,long,double)
org.opencv.core.Core: void PCACompute_1(long,long,long,int)
org.opencv.core.Core: void PCACompute_2(long,long,long)
org.opencv.core.Core: void PCAProject_0(long,long,long,long)
org.opencv.core.Core: void SVBackSubst_0(long,long,long,long,long)
org.opencv.core.Core: void SVDecomp_0(long,long,long,long,int)
org.opencv.core.Core: void SVDecomp_1(long,long,long,long)
org.opencv.core.Core: void absdiff_0(long,long,long)
org.opencv.core.Core: void absdiff_1(long,double,double,double,double,long)
org.opencv.core.Core: void add_0(long,long,long,long,int)
org.opencv.core.Core: void add_1(long,long,long,long)
org.opencv.core.Core: void add_2(long,long,long)
org.opencv.core.Core: void add_3(long,double,double,double,double,long,long,int)
org.opencv.core.Core: void add_4(long,double,double,double,double,long,long)
org.opencv.core.Core: void add_5(long,double,double,double,double,long)
org.opencv.core.Core: void addWeighted_0(long,double,long,double,double,long,int)
org.opencv.core.Core: void addWeighted_1(long,double,long,double,double,long)
org.opencv.core.Core: void batchDistance_0(long,long,long,int,long,int,int,long,int,boolean)
org.opencv.core.Core: void batchDistance_1(long,long,long,int,long,int,int)
org.opencv.core.Core: void batchDistance_2(long,long,long,int,long)
org.opencv.core.Core: void bitwise_and_0(long,long,long,long)
org.opencv.core.Core: void bitwise_and_1(long,long,long)
org.opencv.core.Core: void bitwise_not_0(long,long,long)
org.opencv.core.Core: void bitwise_not_1(long,long)
org.opencv.core.Core: void bitwise_or_0(long,long,long,long)
org.opencv.core.Core: void bitwise_or_1(long,long,long)
org.opencv.core.Core: void bitwise_xor_0(long,long,long,long)
org.opencv.core.Core: void bitwise_xor_1(long,long,long)
org.opencv.core.Core: void calcCovarMatrix_0(long,long,long,int,int)
org.opencv.core.Core: void calcCovarMatrix_1(long,long,long,int)
org.opencv.core.Core: void cartToPolar_0(long,long,long,long,boolean)
org.opencv.core.Core: void cartToPolar_1(long,long,long,long)
org.opencv.core.Core: void compare_0(long,long,long,int)
org.opencv.core.Core: void compare_1(long,double,double,double,double,long,int)
org.opencv.core.Core: void completeSymm_0(long,boolean)
org.opencv.core.Core: void completeSymm_1(long)
org.opencv.core.Core: void convertFp16_0(long,long)
org.opencv.core.Core: void convertScaleAbs_0(long,long,double,double)
org.opencv.core.Core: void convertScaleAbs_1(long,long)
org.opencv.core.Core: void copyMakeBorder_0(long,long,int,int,int,int,int,double,double,double,double)
org.opencv.core.Core: void copyMakeBorder_1(long,long,int,int,int,int,int)
org.opencv.core.Core: void dct_0(long,long,int)
org.opencv.core.Core: void dct_1(long,long)
org.opencv.core.Core: void dft_0(long,long,int,int)
org.opencv.core.Core: void dft_1(long,long)
org.opencv.core.Core: void divide_0(long,long,long,double,int)
org.opencv.core.Core: void divide_1(long,long,long,double)
org.opencv.core.Core: void divide_2(long,long,long)
org.opencv.core.Core: void divide_3(long,double,double,double,double,long,double,int)
org.opencv.core.Core: void divide_4(long,double,double,double,double,long,double)
org.opencv.core.Core: void divide_5(long,double,double,double,double,long)
org.opencv.core.Core: void divide_6(double,long,long,int)
org.opencv.core.Core: void divide_7(double,long,long)
org.opencv.core.Core: void exp_0(long,long)
org.opencv.core.Core: void extractChannel_0(long,long,int)
org.opencv.core.Core: void findNonZero_0(long,long)
org.opencv.core.Core: void flip_0(long,long,int)
org.opencv.core.Core: void gemm_0(long,long,double,long,double,long,int)
org.opencv.core.Core: void gemm_1(long,long,double,long,double,long)
org.opencv.core.Core: void hconcat_0(long,long)
org.opencv.core.Core: void idct_0(long,long,int)
org.opencv.core.Core: void idct_1(long,long)
org.opencv.core.Core: void idft_0(long,long,int,int)
org.opencv.core.Core: void idft_1(long,long)
org.opencv.core.Core: void inRange_0(long,double,double,double,double,double,double,double,double,long)
org.opencv.core.Core: void insertChannel_0(long,long,int)
org.opencv.core.Core: void log_0(long,long)
org.opencv.core.Core: void magnitude_0(long,long,long)
org.opencv.core.Core: void max_0(long,long,long)
org.opencv.core.Core: void max_1(long,double,double,double,double,long)
org.opencv.core.Core: void meanStdDev_0(long,long,long,long)
org.opencv.core.Core: void meanStdDev_1(long,long,long)
org.opencv.core.Core: void merge_0(long,long)
org.opencv.core.Core: void min_0(long,long,long)
org.opencv.core.Core: void min_1(long,double,double,double,double,long)
org.opencv.core.Core: void mixChannels_0(long,long,long)
org.opencv.core.Core: void mulSpectrums_0(long,long,long,int,boolean)
org.opencv.core.Core: void mulSpectrums_1(long,long,long,int)
org.opencv.core.Core: void mulTransposed_0(long,long,boolean,long,double,int)
org.opencv.core.Core: void mulTransposed_1(long,long,boolean,long,double)
org.opencv.core.Core: void mulTransposed_2(long,long,boolean)
org.opencv.core.Core: void multiply_0(long,long,long,double,int)
org.opencv.core.Core: void multiply_1(long,long,long,double)
org.opencv.core.Core: void multiply_2(long,long,long)
org.opencv.core.Core: void multiply_3(long,double,double,double,double,long,double,int)
org.opencv.core.Core: void multiply_4(long,double,double,double,double,long,double)
org.opencv.core.Core: void multiply_5(long,double,double,double,double,long)
org.opencv.core.Core: void normalize_0(long,long,double,double,int,int,long)
org.opencv.core.Core: void normalize_1(long,long,double,double,int,int)
org.opencv.core.Core: void normalize_2(long,long,double,double,int)
org.opencv.core.Core: void normalize_3(long,long)
org.opencv.core.Core: void patchNaNs_0(long,double)
org.opencv.core.Core: void patchNaNs_1(long)
org.opencv.core.Core: void perspectiveTransform_0(long,long,long)
org.opencv.core.Core: void phase_0(long,long,long,boolean)
org.opencv.core.Core: void phase_1(long,long,long)
org.opencv.core.Core: void polarToCart_0(long,long,long,long,boolean)
org.opencv.core.Core: void polarToCart_1(long,long,long,long)
org.opencv.core.Core: void pow_0(long,double,long)
org.opencv.core.Core: void randShuffle_0(long,double)
org.opencv.core.Core: void randShuffle_1(long)
org.opencv.core.Core: void randn_0(long,double,double)
org.opencv.core.Core: void randu_0(long,double,double)
org.opencv.core.Core: void reduce_0(long,long,int,int,int)
org.opencv.core.Core: void reduce_1(long,long,int,int)
org.opencv.core.Core: void repeat_0(long,int,int,long)
org.opencv.core.Core: void rotate_0(long,long,int)
org.opencv.core.Core: void scaleAdd_0(long,double,long,long)
org.opencv.core.Core: void setErrorVerbosity_0(boolean)
org.opencv.core.Core: void setIdentity_0(long,double,double,double,double)
org.opencv.core.Core: void setIdentity_1(long)
org.opencv.core.Core: void setNumThreads_0(int)
org.opencv.core.Core: void setRNGSeed_0(int)
org.opencv.core.Core: void sort_0(long,long,int)
org.opencv.core.Core: void sortIdx_0(long,long,int)
org.opencv.core.Core: void split_0(long,long)
org.opencv.core.Core: void sqrt_0(long,long)
org.opencv.core.Core: void subtract_0(long,long,long,long,int)
org.opencv.core.Core: void subtract_1(long,long,long,long)
org.opencv.core.Core: void subtract_2(long,long,long)
org.opencv.core.Core: void subtract_3(long,double,double,double,double,long,long,int)
org.opencv.core.Core: void subtract_4(long,double,double,double,double,long,long)
org.opencv.core.Core: void subtract_5(long,double,double,double,double,long)
org.opencv.core.Core: void transform_0(long,long,long)
org.opencv.core.Core: void transpose_0(long,long)
org.opencv.core.Core: void vconcat_0(long,long)
org.opencv.core.Core: double[] n_minMaxLocManual(long,long)
org.opencv.core.Mat
org.opencv.core.Mat: long n_Mat()
org.opencv.core.Mat: long n_Mat(int,int,int)
org.opencv.core.Mat: long n_Mat(double,double,int)
org.opencv.core.Mat: long n_Mat(int,int,int,double,double,double,double)
org.opencv.core.Mat: long n_Mat(double,double,int,double,double,double,double)
org.opencv.core.Mat: long n_Mat(long,int,int,int,int)
org.opencv.core.Mat: long n_Mat(long,int,int)
org.opencv.core.Mat: long n_adjustROI(long,int,int,int,int)
org.opencv.core.Mat: void n_assignTo(long,long,int)
org.opencv.core.Mat: void n_assignTo(long,long)
org.opencv.core.Mat: int n_channels(long)
org.opencv.core.Mat: int n_checkVector(long,int,int,boolean)
org.opencv.core.Mat: int n_checkVector(long,int,int)
org.opencv.core.Mat: int n_checkVector(long,int)
org.opencv.core.Mat: long n_clone(long)
org.opencv.core.Mat: long n_col(long,int)
org.opencv.core.Mat: long n_colRange(long,int,int)
org.opencv.core.Mat: int n_dims(long)
org.opencv.core.Mat: int n_cols(long)
org.opencv.core.Mat: void n_convertTo(long,long,int,double,double)
org.opencv.core.Mat: void n_convertTo(long,long,int,double)
org.opencv.core.Mat: void n_convertTo(long,long,int)
org.opencv.core.Mat: void n_copyTo(long,long)
org.opencv.core.Mat: void n_copyTo(long,long,long)
org.opencv.core.Mat: void n_create(long,int,int,int)
org.opencv.core.Mat: void n_create(long,double,double,int)
org.opencv.core.Mat: long n_cross(long,long)
org.opencv.core.Mat: long n_dataAddr(long)
org.opencv.core.Mat: int n_depth(long)
org.opencv.core.Mat: long n_diag(long,int)
org.opencv.core.Mat: long n_diag(long)
org.opencv.core.Mat: double n_dot(long,long)
org.opencv.core.Mat: long n_elemSize(long)
org.opencv.core.Mat: long n_elemSize1(long)
org.opencv.core.Mat: boolean n_empty(long)
org.opencv.core.Mat: long n_eye(int,int,int)
org.opencv.core.Mat: long n_eye(double,double,int)
org.opencv.core.Mat: long n_inv(long,int)
org.opencv.core.Mat: long n_inv(long)
org.opencv.core.Mat: boolean n_isContinuous(long)
org.opencv.core.Mat: boolean n_isSubmatrix(long)
org.opencv.core.Mat: void locateROI_0(long,double[],double[])
org.opencv.core.Mat: long n_mul(long,long,double)
org.opencv.core.Mat: long n_mul(long,long)
org.opencv.core.Mat: long n_ones(int,int,int)
org.opencv.core.Mat: long n_ones(double,double,int)
org.opencv.core.Mat: void n_push_back(long,long)
org.opencv.core.Mat: void n_release(long)
org.opencv.core.Mat: long n_reshape(long,int,int)
org.opencv.core.Mat: long n_reshape(long,int)
org.opencv.core.Mat: long n_row(long,int)
org.opencv.core.Mat: long n_rowRange(long,int,int)
org.opencv.core.Mat: int n_rows(long)
org.opencv.core.Mat: long n_setTo(long,double,double,double,double)
org.opencv.core.Mat: long n_setTo(long,double,double,double,double,long)
org.opencv.core.Mat: long n_setTo(long,long,long)
org.opencv.core.Mat: long n_setTo(long,long)
org.opencv.core.Mat: double[] n_size(long)
org.opencv.core.Mat: long n_step1(long,int)
org.opencv.core.Mat: long n_step1(long)
org.opencv.core.Mat: long n_submat_rr(long,int,int,int,int)
org.opencv.core.Mat: long n_submat(long,int,int,int,int)
org.opencv.core.Mat: long n_t(long)
org.opencv.core.Mat: long n_total(long)
org.opencv.core.Mat: int n_type(long)
org.opencv.core.Mat: long n_zeros(int,int,int)
org.opencv.core.Mat: long n_zeros(double,double,int)
org.opencv.core.Mat: void n_delete(long)
org.opencv.core.Mat: int nPutD(long,int,int,int,double[])
org.opencv.core.Mat: int nPutF(long,int,int,int,float[])
org.opencv.core.Mat: int nPutI(long,int,int,int,int[])
org.opencv.core.Mat: int nPutS(long,int,int,int,short[])
org.opencv.core.Mat: int nPutB(long,int,int,int,byte[])
org.opencv.core.Mat: int nGetB(long,int,int,int,byte[])
org.opencv.core.Mat: int nGetS(long,int,int,int,short[])
org.opencv.core.Mat: int nGetI(long,int,int,int,int[])
org.opencv.core.Mat: int nGetF(long,int,int,int,float[])
org.opencv.core.Mat: int nGetD(long,int,int,int,double[])
org.opencv.core.Mat: double[] nGet(long,int,int)
org.opencv.core.Mat: java.lang.String nDump(long)
org.opencv.core.TickMeter
org.opencv.core.TickMeter: long TickMeter_0()
org.opencv.core.TickMeter: double getTimeMicro_0(long)
org.opencv.core.TickMeter: double getTimeMilli_0(long)
org.opencv.core.TickMeter: double getTimeSec_0(long)
org.opencv.core.TickMeter: long getCounter_0(long)
org.opencv.core.TickMeter: long getTimeTicks_0(long)
org.opencv.core.TickMeter: void reset_0(long)
org.opencv.core.TickMeter: void start_0(long)
org.opencv.core.TickMeter: void stop_0(long)
org.opencv.core.TickMeter: void delete(long)
org.opencv.features2d.AKAZE
org.opencv.features2d.AKAZE: long create_0(int,int,int,float,int,int,int)
org.opencv.features2d.AKAZE: long create_1()
org.opencv.features2d.AKAZE: double getThreshold_0(long)
org.opencv.features2d.AKAZE: int getDescriptorChannels_0(long)
org.opencv.features2d.AKAZE: int getDescriptorSize_0(long)
org.opencv.features2d.AKAZE: int getDescriptorType_0(long)
org.opencv.features2d.AKAZE: int getDiffusivity_0(long)
org.opencv.features2d.AKAZE: int getNOctaveLayers_0(long)
org.opencv.features2d.AKAZE: int getNOctaves_0(long)
org.opencv.features2d.AKAZE: void setDescriptorChannels_0(long,int)
org.opencv.features2d.AKAZE: void setDescriptorSize_0(long,int)
org.opencv.features2d.AKAZE: void setDescriptorType_0(long,int)
org.opencv.features2d.AKAZE: void setDiffusivity_0(long,int)
org.opencv.features2d.AKAZE: void setNOctaveLayers_0(long,int)
org.opencv.features2d.AKAZE: void setNOctaves_0(long,int)
org.opencv.features2d.AKAZE: void setThreshold_0(long,double)
org.opencv.features2d.AKAZE: void delete(long)
org.opencv.features2d.AgastFeatureDetector
org.opencv.features2d.AgastFeatureDetector: long create_0(int,boolean,int)
org.opencv.features2d.AgastFeatureDetector: long create_1()
org.opencv.features2d.AgastFeatureDetector: boolean getNonmaxSuppression_0(long)
org.opencv.features2d.AgastFeatureDetector: int getThreshold_0(long)
org.opencv.features2d.AgastFeatureDetector: int getType_0(long)
org.opencv.features2d.AgastFeatureDetector: void setNonmaxSuppression_0(long,boolean)
org.opencv.features2d.AgastFeatureDetector: void setThreshold_0(long,int)
org.opencv.features2d.AgastFeatureDetector: void setType_0(long,int)
org.opencv.features2d.AgastFeatureDetector: void delete(long)
org.opencv.features2d.BFMatcher
org.opencv.features2d.BFMatcher: long BFMatcher_0(int,boolean)
org.opencv.features2d.BFMatcher: long BFMatcher_1()
org.opencv.features2d.BFMatcher: long create_0(int,boolean)
org.opencv.features2d.BFMatcher: long create_1()
org.opencv.features2d.BFMatcher: void delete(long)
org.opencv.features2d.BOWImgDescriptorExtractor
org.opencv.features2d.BOWImgDescriptorExtractor: long getVocabulary_0(long)
org.opencv.features2d.BOWImgDescriptorExtractor: int descriptorSize_0(long)
org.opencv.features2d.BOWImgDescriptorExtractor: int descriptorType_0(long)
org.opencv.features2d.BOWImgDescriptorExtractor: void compute_0(long,long,long,long)
org.opencv.features2d.BOWImgDescriptorExtractor: void setVocabulary_0(long,long)
org.opencv.features2d.BOWImgDescriptorExtractor: void delete(long)
org.opencv.features2d.BOWKMeansTrainer
org.opencv.features2d.BOWKMeansTrainer: long BOWKMeansTrainer_0(int,int,int,double,int,int)
org.opencv.features2d.BOWKMeansTrainer: long BOWKMeansTrainer_1(int)
org.opencv.features2d.BOWKMeansTrainer: long cluster_0(long,long)
org.opencv.features2d.BOWKMeansTrainer: long cluster_1(long)
org.opencv.features2d.BOWKMeansTrainer: void delete(long)
org.opencv.features2d.BOWTrainer
org.opencv.features2d.BOWTrainer: long cluster_0(long,long)
org.opencv.features2d.BOWTrainer: long cluster_1(long)
org.opencv.features2d.BOWTrainer: int descriptorsCount_0(long)
org.opencv.features2d.BOWTrainer: long getDescriptors_0(long)
org.opencv.features2d.BOWTrainer: void add_0(long,long)
org.opencv.features2d.BOWTrainer: void clear_0(long)
org.opencv.features2d.BOWTrainer: void delete(long)
org.opencv.features2d.BRISK
org.opencv.features2d.BRISK: long create_0(int,int,float)
org.opencv.features2d.BRISK: long create_1()
org.opencv.features2d.BRISK: long create_2(long,long,float,float,long)
org.opencv.features2d.BRISK: long create_3(long,long)
org.opencv.features2d.BRISK: void delete(long)
org.opencv.features2d.DescriptorExtractor
org.opencv.features2d.DescriptorExtractor: long create_0(int)
org.opencv.features2d.DescriptorExtractor: boolean empty_0(long)
org.opencv.features2d.DescriptorExtractor: int descriptorSize_0(long)
org.opencv.features2d.DescriptorExtractor: int descriptorType_0(long)
org.opencv.features2d.DescriptorExtractor: void compute_0(long,long,long,long)
org.opencv.features2d.DescriptorExtractor: void compute_1(long,long,long,long)
org.opencv.features2d.DescriptorExtractor: void read_0(long,java.lang.String)
org.opencv.features2d.DescriptorExtractor: void write_0(long,java.lang.String)
org.opencv.features2d.DescriptorExtractor: void delete(long)
org.opencv.features2d.DescriptorMatcher
org.opencv.features2d.DescriptorMatcher: long clone_0(long,boolean)
org.opencv.features2d.DescriptorMatcher: long clone_1(long)
org.opencv.features2d.DescriptorMatcher: long create_0(java.lang.String)
org.opencv.features2d.DescriptorMatcher: long create_1(int)
org.opencv.features2d.DescriptorMatcher: boolean empty_0(long)
org.opencv.features2d.DescriptorMatcher: boolean isMaskSupported_0(long)
org.opencv.features2d.DescriptorMatcher: long getTrainDescriptors_0(long)
org.opencv.features2d.DescriptorMatcher: void add_0(long,long)
org.opencv.features2d.DescriptorMatcher: void clear_0(long)
org.opencv.features2d.DescriptorMatcher: void knnMatch_0(long,long,long,long,int,long,boolean)
org.opencv.features2d.DescriptorMatcher: void knnMatch_1(long,long,long,long,int)
org.opencv.features2d.DescriptorMatcher: void knnMatch_2(long,long,long,int,long,boolean)
org.opencv.features2d.DescriptorMatcher: void knnMatch_3(long,long,long,int)
org.opencv.features2d.DescriptorMatcher: void match_0(long,long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_1(long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_2(long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_3(long,long,long)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_0(long,long,long,long,float,long,boolean)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_1(long,long,long,long,float)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_2(long,long,long,float,long,boolean)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_3(long,long,long,float)
org.opencv.features2d.DescriptorMatcher: void read_0(long,java.lang.String)
org.opencv.features2d.DescriptorMatcher: void train_0(long)
org.opencv.features2d.DescriptorMatcher: void write_0(long,java.lang.String)
org.opencv.features2d.DescriptorMatcher: void delete(long)
org.opencv.features2d.FastFeatureDetector
org.opencv.features2d.FastFeatureDetector: long create_0(int,boolean,int)
org.opencv.features2d.FastFeatureDetector: long create_1()
org.opencv.features2d.FastFeatureDetector: boolean getNonmaxSuppression_0(long)
org.opencv.features2d.FastFeatureDetector: int getThreshold_0(long)
org.opencv.features2d.FastFeatureDetector: int getType_0(long)
org.opencv.features2d.FastFeatureDetector: void setNonmaxSuppression_0(long,boolean)
org.opencv.features2d.FastFeatureDetector: void setThreshold_0(long,int)
org.opencv.features2d.FastFeatureDetector: void setType_0(long,int)
org.opencv.features2d.FastFeatureDetector: void delete(long)
org.opencv.features2d.Feature2D
org.opencv.features2d.Feature2D: boolean empty_0(long)
org.opencv.features2d.Feature2D: int defaultNorm_0(long)
org.opencv.features2d.Feature2D: int descriptorSize_0(long)
org.opencv.features2d.Feature2D: int descriptorType_0(long)
org.opencv.features2d.Feature2D: void compute_0(long,long,long,long)
org.opencv.features2d.Feature2D: void compute_1(long,long,long,long)
org.opencv.features2d.Feature2D: void detect_0(long,long,long,long)
org.opencv.features2d.Feature2D: void detect_1(long,long,long)
org.opencv.features2d.Feature2D: void detect_2(long,long,long,long)
org.opencv.features2d.Feature2D: void detect_3(long,long,long)
org.opencv.features2d.Feature2D: void detectAndCompute_0(long,long,long,long,long,boolean)
org.opencv.features2d.Feature2D: void detectAndCompute_1(long,long,long,long,long)
org.opencv.features2d.Feature2D: void read_0(long,java.lang.String)
org.opencv.features2d.Feature2D: void write_0(long,java.lang.String)
org.opencv.features2d.Feature2D: void delete(long)
org.opencv.features2d.FeatureDetector
org.opencv.features2d.FeatureDetector: long create_0(int)
org.opencv.features2d.FeatureDetector: boolean empty_0(long)
org.opencv.features2d.FeatureDetector: void detect_0(long,long,long,long)
org.opencv.features2d.FeatureDetector: void detect_1(long,long,long)
org.opencv.features2d.FeatureDetector: void detect_2(long,long,long,long)
org.opencv.features2d.FeatureDetector: void detect_3(long,long,long)
org.opencv.features2d.FeatureDetector: void read_0(long,java.lang.String)
org.opencv.features2d.FeatureDetector: void write_0(long,java.lang.String)
org.opencv.features2d.FeatureDetector: void delete(long)
org.opencv.features2d.Features2d
org.opencv.features2d.Features2d: void drawKeypoints_0(long,long,long,double,double,double,double,int)
org.opencv.features2d.Features2d: void drawKeypoints_1(long,long,long)
org.opencv.features2d.Features2d: void drawMatches_0(long,long,long,long,long,long,double,double,double,double,double,double,double,double,long,int)
org.opencv.features2d.Features2d: void drawMatches_1(long,long,long,long,long,long)
org.opencv.features2d.Features2d: void drawMatches2_0(long,long,long,long,long,long,double,double,double,double,double,double,double,double,long,int)
org.opencv.features2d.Features2d: void drawMatches2_1(long,long,long,long,long,long)
org.opencv.features2d.Features2d: void drawMatchesKnn_0(long,long,long,long,long,long,double,double,double,double,double,double,double,double,long,int)
org.opencv.features2d.Features2d: void drawMatchesKnn_1(long,long,long,long,long,long)
org.opencv.features2d.FlannBasedMatcher
org.opencv.features2d.FlannBasedMatcher: long FlannBasedMatcher_0()
org.opencv.features2d.FlannBasedMatcher: long create_0()
org.opencv.features2d.FlannBasedMatcher: void delete(long)
org.opencv.features2d.GFTTDetector
org.opencv.features2d.GFTTDetector: long create_0(int,double,double,int,boolean,double)
org.opencv.features2d.GFTTDetector: long create_1()
org.opencv.features2d.GFTTDetector: boolean getHarrisDetector_0(long)
org.opencv.features2d.GFTTDetector: double getK_0(long)
org.opencv.features2d.GFTTDetector: double getMinDistance_0(long)
org.opencv.features2d.GFTTDetector: double getQualityLevel_0(long)
org.opencv.features2d.GFTTDetector: int getBlockSize_0(long)
org.opencv.features2d.GFTTDetector: int getMaxFeatures_0(long)
org.opencv.features2d.GFTTDetector: void setBlockSize_0(long,int)
org.opencv.features2d.GFTTDetector: void setHarrisDetector_0(long,boolean)
org.opencv.features2d.GFTTDetector: void setK_0(long,double)
org.opencv.features2d.GFTTDetector: void setMaxFeatures_0(long,int)
org.opencv.features2d.GFTTDetector: void setMinDistance_0(long,double)
org.opencv.features2d.GFTTDetector: void setQualityLevel_0(long,double)
org.opencv.features2d.GFTTDetector: void delete(long)
org.opencv.features2d.KAZE
org.opencv.features2d.KAZE: long create_0(boolean,boolean,float,int,int,int)
org.opencv.features2d.KAZE: long create_1()
org.opencv.features2d.KAZE: boolean getExtended_0(long)
org.opencv.features2d.KAZE: boolean getUpright_0(long)
org.opencv.features2d.KAZE: double getThreshold_0(long)
org.opencv.features2d.KAZE: int getDiffusivity_0(long)
org.opencv.features2d.KAZE: int getNOctaveLayers_0(long)
org.opencv.features2d.KAZE: int getNOctaves_0(long)
org.opencv.features2d.KAZE: void setDiffusivity_0(long,int)
org.opencv.features2d.KAZE: void setExtended_0(long,boolean)
org.opencv.features2d.KAZE: void setNOctaveLayers_0(long,int)
org.opencv.features2d.KAZE: void setNOctaves_0(long,int)
org.opencv.features2d.KAZE: void setThreshold_0(long,double)
org.opencv.features2d.KAZE: void setUpright_0(long,boolean)
org.opencv.features2d.KAZE: void delete(long)
org.opencv.features2d.MSER
org.opencv.features2d.MSER: long create_0(int,int,int,double,double,int,double,double,int)
org.opencv.features2d.MSER: long create_1()
org.opencv.features2d.MSER: boolean getPass2Only_0(long)
org.opencv.features2d.MSER: int getDelta_0(long)
org.opencv.features2d.MSER: int getMaxArea_0(long)
org.opencv.features2d.MSER: int getMinArea_0(long)
org.opencv.features2d.MSER: void detectRegions_0(long,long,long,long)
org.opencv.features2d.MSER: void setDelta_0(long,int)
org.opencv.features2d.MSER: void setMaxArea_0(long,int)
org.opencv.features2d.MSER: void setMinArea_0(long,int)
org.opencv.features2d.MSER: void setPass2Only_0(long,boolean)
org.opencv.features2d.MSER: void delete(long)
org.opencv.features2d.ORB
org.opencv.features2d.ORB: long create_0(int,float,int,int,int,int,int,int,int)
org.opencv.features2d.ORB: long create_1()
org.opencv.features2d.ORB: double getScaleFactor_0(long)
org.opencv.features2d.ORB: int getEdgeThreshold_0(long)
org.opencv.features2d.ORB: int getFastThreshold_0(long)
org.opencv.features2d.ORB: int getFirstLevel_0(long)
org.opencv.features2d.ORB: int getMaxFeatures_0(long)
org.opencv.features2d.ORB: int getNLevels_0(long)
org.opencv.features2d.ORB: int getPatchSize_0(long)
org.opencv.features2d.ORB: int getScoreType_0(long)
org.opencv.features2d.ORB: int getWTA_K_0(long)
org.opencv.features2d.ORB: void setEdgeThreshold_0(long,int)
org.opencv.features2d.ORB: void setFastThreshold_0(long,int)
org.opencv.features2d.ORB: void setFirstLevel_0(long,int)
org.opencv.features2d.ORB: void setMaxFeatures_0(long,int)
org.opencv.features2d.ORB: void setNLevels_0(long,int)
org.opencv.features2d.ORB: void setPatchSize_0(long,int)
org.opencv.features2d.ORB: void setScaleFactor_0(long,double)
org.opencv.features2d.ORB: void setScoreType_0(long,int)
org.opencv.features2d.ORB: void setWTA_K_0(long,int)
org.opencv.features2d.ORB: void delete(long)
org.opencv.features2d.Params
org.opencv.features2d.Params: long Params_0()
org.opencv.features2d.Params: float get_thresholdStep_0(long)
org.opencv.features2d.Params: void set_thresholdStep_0(long,float)
org.opencv.features2d.Params: float get_minThreshold_0(long)
org.opencv.features2d.Params: void set_minThreshold_0(long,float)
org.opencv.features2d.Params: float get_maxThreshold_0(long)
org.opencv.features2d.Params: void set_maxThreshold_0(long,float)
org.opencv.features2d.Params: long get_minRepeatability_0(long)
org.opencv.features2d.Params: void set_minRepeatability_0(long,long)
org.opencv.features2d.Params: float get_minDistBetweenBlobs_0(long)
org.opencv.features2d.Params: void set_minDistBetweenBlobs_0(long,float)
org.opencv.features2d.Params: boolean get_filterByColor_0(long)
org.opencv.features2d.Params: void set_filterByColor_0(long,boolean)
org.opencv.features2d.Params: boolean get_filterByArea_0(long)
org.opencv.features2d.Params: void set_filterByArea_0(long,boolean)
org.opencv.features2d.Params: float get_minArea_0(long)
org.opencv.features2d.Params: void set_minArea_0(long,float)
org.opencv.features2d.Params: float get_maxArea_0(long)
org.opencv.features2d.Params: void set_maxArea_0(long,float)
org.opencv.features2d.Params: boolean get_filterByCircularity_0(long)
org.opencv.features2d.Params: void set_filterByCircularity_0(long,boolean)
org.opencv.features2d.Params: float get_minCircularity_0(long)
org.opencv.features2d.Params: void set_minCircularity_0(long,float)
org.opencv.features2d.Params: float get_maxCircularity_0(long)
org.opencv.features2d.Params: void set_maxCircularity_0(long,float)
org.opencv.features2d.Params: boolean get_filterByInertia_0(long)
org.opencv.features2d.Params: void set_filterByInertia_0(long,boolean)
org.opencv.features2d.Params: float get_minInertiaRatio_0(long)
org.opencv.features2d.Params: void set_minInertiaRatio_0(long,float)
org.opencv.features2d.Params: float get_maxInertiaRatio_0(long)
org.opencv.features2d.Params: void set_maxInertiaRatio_0(long,float)
org.opencv.features2d.Params: boolean get_filterByConvexity_0(long)
org.opencv.features2d.Params: void set_filterByConvexity_0(long,boolean)
org.opencv.features2d.Params: float get_minConvexity_0(long)
org.opencv.features2d.Params: void set_minConvexity_0(long,float)
org.opencv.features2d.Params: float get_maxConvexity_0(long)
org.opencv.features2d.Params: void set_maxConvexity_0(long,float)
org.opencv.features2d.Params: void delete(long)
org.opencv.imgcodecs.Imgcodecs
org.opencv.imgcodecs.Imgcodecs: long imdecode_0(long,int)
org.opencv.imgcodecs.Imgcodecs: long imread_0(java.lang.String,int)
org.opencv.imgcodecs.Imgcodecs: long imread_1(java.lang.String)
org.opencv.imgcodecs.Imgcodecs: boolean imencode_0(java.lang.String,long,long,long)
org.opencv.imgcodecs.Imgcodecs: boolean imencode_1(java.lang.String,long,long)
org.opencv.imgcodecs.Imgcodecs: boolean imreadmulti_0(java.lang.String,long,int)
org.opencv.imgcodecs.Imgcodecs: boolean imreadmulti_1(java.lang.String,long)
org.opencv.imgcodecs.Imgcodecs: boolean imwrite_0(java.lang.String,long,long)
org.opencv.imgcodecs.Imgcodecs: boolean imwrite_1(java.lang.String,long)
org.opencv.imgproc.CLAHE
org.opencv.imgproc.CLAHE: double[] getTilesGridSize_0(long)
org.opencv.imgproc.CLAHE: double getClipLimit_0(long)
org.opencv.imgproc.CLAHE: void apply_0(long,long,long)
org.opencv.imgproc.CLAHE: void collectGarbage_0(long)
org.opencv.imgproc.CLAHE: void setClipLimit_0(long,double)
org.opencv.imgproc.CLAHE: void setTilesGridSize_0(long,double,double)
org.opencv.imgproc.CLAHE: void delete(long)
org.opencv.imgproc.Imgproc
org.opencv.imgproc.Imgproc: long getAffineTransform_0(long,long)
org.opencv.imgproc.Imgproc: long getDefaultNewCameraMatrix_0(long,double,double,boolean)
org.opencv.imgproc.Imgproc: long getDefaultNewCameraMatrix_1(long)
org.opencv.imgproc.Imgproc: long getGaborKernel_0(double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: long getGaborKernel_1(double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: long getGaussianKernel_0(int,double,int)
org.opencv.imgproc.Imgproc: long getGaussianKernel_1(int,double)
org.opencv.imgproc.Imgproc: long getPerspectiveTransform_0(long,long)
org.opencv.imgproc.Imgproc: long getRotationMatrix2D_0(double,double,double,double)
org.opencv.imgproc.Imgproc: long getStructuringElement_0(int,double,double,double,double)
org.opencv.imgproc.Imgproc: long getStructuringElement_1(int,double,double)
org.opencv.imgproc.Imgproc: double[] moments_0(long,boolean)
org.opencv.imgproc.Imgproc: double[] moments_1(long)
org.opencv.imgproc.Imgproc: double[] phaseCorrelate_0(long,long,long,double[])
org.opencv.imgproc.Imgproc: double[] phaseCorrelate_1(long,long)
org.opencv.imgproc.Imgproc: long createCLAHE_0(double,double,double)
org.opencv.imgproc.Imgproc: long createCLAHE_1()
org.opencv.imgproc.Imgproc: long createLineSegmentDetector_0(int,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: long createLineSegmentDetector_1()
org.opencv.imgproc.Imgproc: double[] boundingRect_0(long)
org.opencv.imgproc.Imgproc: double[] fitEllipse_0(long)
org.opencv.imgproc.Imgproc: double[] minAreaRect_0(long)
org.opencv.imgproc.Imgproc: boolean clipLine_0(int,int,int,int,double,double,double[],double,double,double[])
org.opencv.imgproc.Imgproc: boolean isContourConvex_0(long)
org.opencv.imgproc.Imgproc: double arcLength_0(long,boolean)
org.opencv.imgproc.Imgproc: double compareHist_0(long,long,int)
org.opencv.imgproc.Imgproc: double contourArea_0(long,boolean)
org.opencv.imgproc.Imgproc: double contourArea_1(long)
org.opencv.imgproc.Imgproc: double matchShapes_0(long,long,int,double)
org.opencv.imgproc.Imgproc: double minEnclosingTriangle_0(long,long)
org.opencv.imgproc.Imgproc: double pointPolygonTest_0(long,double,double,boolean)
org.opencv.imgproc.Imgproc: double threshold_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: float initWideAngleProjMap_0(long,long,double,double,int,int,long,long,int,double)
org.opencv.imgproc.Imgproc: float initWideAngleProjMap_1(long,long,double,double,int,int,long,long)
org.opencv.imgproc.Imgproc: float intersectConvexConvex_0(long,long,long,boolean)
org.opencv.imgproc.Imgproc: float intersectConvexConvex_1(long,long,long)
org.opencv.imgproc.Imgproc: int connectedComponentsWithAlgorithm_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: int connectedComponents_0(long,long,int,int)
org.opencv.imgproc.Imgproc: int connectedComponents_1(long,long)
org.opencv.imgproc.Imgproc: int connectedComponentsWithStatsWithAlgorithm_0(long,long,long,long,int,int,int)
org.opencv.imgproc.Imgproc: int connectedComponentsWithStats_0(long,long,long,long,int,int)
org.opencv.imgproc.Imgproc: int connectedComponentsWithStats_1(long,long,long,long)
org.opencv.imgproc.Imgproc: int floodFill_0(long,long,double,double,double,double,double,double,double[],double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: int floodFill_1(long,long,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: int rotatedRectangleIntersection_0(double,double,double,double,double,double,double,double,double,double,long)
org.opencv.imgproc.Imgproc: void Canny_0(long,long,long,double,double,boolean)
org.opencv.imgproc.Imgproc: void Canny_1(long,long,long,double,double)
org.opencv.imgproc.Imgproc: void Canny_2(long,long,double,double,int,boolean)
org.opencv.imgproc.Imgproc: void Canny_3(long,long,double,double)
org.opencv.imgproc.Imgproc: void GaussianBlur_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void GaussianBlur_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void GaussianBlur_2(long,long,double,double,double)
org.opencv.imgproc.Imgproc: void HoughCircles_0(long,long,int,double,double,double,double,int,int)
org.opencv.imgproc.Imgproc: void HoughCircles_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void HoughLines_0(long,long,double,double,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void HoughLines_1(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void HoughLinesP_0(long,long,double,double,int,double,double)
org.opencv.imgproc.Imgproc: void HoughLinesP_1(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void HuMoments_0(double,double,double,double,double,double,double,double,double,double,long)
org.opencv.imgproc.Imgproc: void Laplacian_0(long,long,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Laplacian_1(long,long,int,int,double,double)
org.opencv.imgproc.Imgproc: void Laplacian_2(long,long,int)
org.opencv.imgproc.Imgproc: void Scharr_0(long,long,int,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Scharr_1(long,long,int,int,int,double,double)
org.opencv.imgproc.Imgproc: void Scharr_2(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void Sobel_0(long,long,int,int,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Sobel_1(long,long,int,int,int,int,double,double)
org.opencv.imgproc.Imgproc: void Sobel_2(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void accumulate_0(long,long,long)
org.opencv.imgproc.Imgproc: void accumulate_1(long,long)
org.opencv.imgproc.Imgproc: void accumulateProduct_0(long,long,long,long)
org.opencv.imgproc.Imgproc: void accumulateProduct_1(long,long,long)
org.opencv.imgproc.Imgproc: void accumulateSquare_0(long,long,long)
org.opencv.imgproc.Imgproc: void accumulateSquare_1(long,long)
org.opencv.imgproc.Imgproc: void accumulateWeighted_0(long,long,double,long)
org.opencv.imgproc.Imgproc: void accumulateWeighted_1(long,long,double)
org.opencv.imgproc.Imgproc: void adaptiveThreshold_0(long,long,double,int,int,int,double)
org.opencv.imgproc.Imgproc: void applyColorMap_0(long,long,int)
org.opencv.imgproc.Imgproc: void approxPolyDP_0(long,long,double,boolean)
org.opencv.imgproc.Imgproc: void arrowedLine_0(long,double,double,double,double,double,double,double,double,int,int,int,double)
org.opencv.imgproc.Imgproc: void arrowedLine_1(long,double,double,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void bilateralFilter_0(long,long,int,double,double,int)
org.opencv.imgproc.Imgproc: void bilateralFilter_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void blur_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void blur_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void blur_2(long,long,double,double)
org.opencv.imgproc.Imgproc: void boxFilter_0(long,long,int,double,double,double,double,boolean,int)
org.opencv.imgproc.Imgproc: void boxFilter_1(long,long,int,double,double,double,double,boolean)
org.opencv.imgproc.Imgproc: void boxFilter_2(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void boxPoints_0(double,double,double,double,double,long)
org.opencv.imgproc.Imgproc: void calcBackProject_0(long,long,long,long,long,double)
org.opencv.imgproc.Imgproc: void calcHist_0(long,long,long,long,long,long,boolean)
org.opencv.imgproc.Imgproc: void calcHist_1(long,long,long,long,long,long)
org.opencv.imgproc.Imgproc: void circle_0(long,double,double,int,double,double,double,double,int,int,int)
org.opencv.imgproc.Imgproc: void circle_1(long,double,double,int,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void circle_2(long,double,double,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void convertMaps_0(long,long,long,long,int,boolean)
org.opencv.imgproc.Imgproc: void convertMaps_1(long,long,long,long,int)
org.opencv.imgproc.Imgproc: void convexHull_0(long,long,boolean)
org.opencv.imgproc.Imgproc: void convexHull_1(long,long)
org.opencv.imgproc.Imgproc: void convexityDefects_0(long,long,long)
org.opencv.imgproc.Imgproc: void cornerEigenValsAndVecs_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void cornerEigenValsAndVecs_1(long,long,int,int)
org.opencv.imgproc.Imgproc: void cornerHarris_0(long,long,int,int,double,int)
org.opencv.imgproc.Imgproc: void cornerHarris_1(long,long,int,int,double)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_1(long,long,int,int)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_2(long,long,int)
org.opencv.imgproc.Imgproc: void cornerSubPix_0(long,long,double,double,double,double,int,int,double)
org.opencv.imgproc.Imgproc: void createHanningWindow_0(long,double,double,int)
org.opencv.imgproc.Imgproc: void cvtColor_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void cvtColor_1(long,long,int)
org.opencv.imgproc.Imgproc: void demosaicing_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void demosaicing_1(long,long,int)
org.opencv.imgproc.Imgproc: void dilate_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void dilate_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void dilate_2(long,long,long)
org.opencv.imgproc.Imgproc: void distanceTransformWithLabels_0(long,long,long,int,int,int)
org.opencv.imgproc.Imgproc: void distanceTransformWithLabels_1(long,long,long,int,int)
org.opencv.imgproc.Imgproc: void distanceTransform_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void distanceTransform_1(long,long,int,int)
org.opencv.imgproc.Imgproc: void drawContours_0(long,long,int,double,double,double,double,int,int,long,int,double,double)
org.opencv.imgproc.Imgproc: void drawContours_1(long,long,int,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void drawContours_2(long,long,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void drawMarker_0(long,double,double,double,double,double,double,int,int,int,int)
org.opencv.imgproc.Imgproc: void drawMarker_1(long,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void ellipse_0(long,double,double,double,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.imgproc.Imgproc: void ellipse_1(long,double,double,double,double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void ellipse_2(long,double,double,double,double,double,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void ellipse_3(long,double,double,double,double,double,double,double,double,double,int,int)
org.opencv.imgproc.Imgproc: void ellipse_4(long,double,double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void ellipse_5(long,double,double,double,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void ellipse2Poly_0(double,double,double,double,int,int,int,int,long)
org.opencv.imgproc.Imgproc: void equalizeHist_0(long,long)
org.opencv.imgproc.Imgproc: void erode_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void erode_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void erode_2(long,long,long)
org.opencv.imgproc.Imgproc: void fillConvexPoly_0(long,long,double,double,double,double,int,int)
org.opencv.imgproc.Imgproc: void fillConvexPoly_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void fillPoly_0(long,long,double,double,double,double,int,int,double,double)
org.opencv.imgproc.Imgproc: void fillPoly_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void filter2D_0(long,long,int,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void filter2D_1(long,long,int,long,double,double,double)
org.opencv.imgproc.Imgproc: void filter2D_2(long,long,int,long)
org.opencv.imgproc.Imgproc: void findContours_0(long,long,long,int,int,double,double)
org.opencv.imgproc.Imgproc: void findContours_1(long,long,long,int,int)
org.opencv.imgproc.Imgproc: void fitLine_0(long,long,int,double,double,double)
org.opencv.imgproc.Imgproc: void getDerivKernels_0(long,long,int,int,int,boolean,int)
org.opencv.imgproc.Imgproc: void getDerivKernels_1(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void getRectSubPix_0(long,double,double,double,double,long,int)
org.opencv.imgproc.Imgproc: void getRectSubPix_1(long,double,double,double,double,long)
org.opencv.imgproc.Imgproc: void goodFeaturesToTrack_0(long,long,int,double,double,long,int,boolean,double)
org.opencv.imgproc.Imgproc: void goodFeaturesToTrack_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void grabCut_0(long,long,int,int,int,int,long,long,int,int)
org.opencv.imgproc.Imgproc: void grabCut_1(long,long,int,int,int,int,long,long,int)
org.opencv.imgproc.Imgproc: void initUndistortRectifyMap_0(long,long,long,long,double,double,int,long,long)
org.opencv.imgproc.Imgproc: void integral3_0(long,long,long,long,int,int)
org.opencv.imgproc.Imgproc: void integral3_1(long,long,long,long)
org.opencv.imgproc.Imgproc: void integral2_0(long,long,long,int,int)
org.opencv.imgproc.Imgproc: void integral2_1(long,long,long)
org.opencv.imgproc.Imgproc: void integral_0(long,long,int)
org.opencv.imgproc.Imgproc: void integral_1(long,long)
org.opencv.imgproc.Imgproc: void invertAffineTransform_0(long,long)
org.opencv.imgproc.Imgproc: void line_0(long,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.imgproc.Imgproc: void line_1(long,double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void line_2(long,double,double,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void linearPolar_0(long,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void logPolar_0(long,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void matchTemplate_0(long,long,long,int,long)
org.opencv.imgproc.Imgproc: void matchTemplate_1(long,long,long,int)
org.opencv.imgproc.Imgproc: void medianBlur_0(long,long,int)
org.opencv.imgproc.Imgproc: void minEnclosingCircle_0(long,double[],double[])
org.opencv.imgproc.Imgproc: void morphologyEx_0(long,long,int,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void morphologyEx_1(long,long,int,long,double,double,int)
org.opencv.imgproc.Imgproc: void morphologyEx_2(long,long,int,long)
org.opencv.imgproc.Imgproc: void polylines_0(long,long,boolean,double,double,double,double,int,int,int)
org.opencv.imgproc.Imgproc: void polylines_1(long,long,boolean,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void polylines_2(long,long,boolean,double,double,double,double)
org.opencv.imgproc.Imgproc: void preCornerDetect_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void preCornerDetect_1(long,long,int)
org.opencv.imgproc.Imgproc: void putText_0(long,java.lang.String,double,double,int,double,double,double,double,double,int,int,boolean)
org.opencv.imgproc.Imgproc: void putText_1(long,java.lang.String,double,double,int,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void putText_2(long,java.lang.String,double,double,int,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void pyrDown_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void pyrDown_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrDown_2(long,long)
org.opencv.imgproc.Imgproc: void pyrMeanShiftFiltering_0(long,long,double,double,int,int,int,double)
org.opencv.imgproc.Imgproc: void pyrMeanShiftFiltering_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrUp_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void pyrUp_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrUp_2(long,long)
org.opencv.imgproc.Imgproc: void rectangle_0(long,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.imgproc.Imgproc: void rectangle_1(long,double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void rectangle_2(long,double,double,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void remap_0(long,long,long,long,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void remap_1(long,long,long,long,int)
org.opencv.imgproc.Imgproc: void resize_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void resize_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void sepFilter2D_0(long,long,int,long,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void sepFilter2D_1(long,long,int,long,long,double,double,double)
org.opencv.imgproc.Imgproc: void sepFilter2D_2(long,long,int,long,long)
org.opencv.imgproc.Imgproc: void spatialGradient_0(long,long,long,int,int)
org.opencv.imgproc.Imgproc: void spatialGradient_1(long,long,long,int)
org.opencv.imgproc.Imgproc: void spatialGradient_2(long,long,long)
org.opencv.imgproc.Imgproc: void sqrBoxFilter_0(long,long,int,double,double,double,double,boolean,int)
org.opencv.imgproc.Imgproc: void sqrBoxFilter_1(long,long,int,double,double,double,double,boolean)
org.opencv.imgproc.Imgproc: void sqrBoxFilter_2(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void undistort_0(long,long,long,long,long)
org.opencv.imgproc.Imgproc: void undistort_1(long,long,long,long)
org.opencv.imgproc.Imgproc: void undistortPoints_0(long,long,long,long,long,long)
org.opencv.imgproc.Imgproc: void undistortPoints_1(long,long,long,long)
org.opencv.imgproc.Imgproc: void warpAffine_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void warpAffine_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void warpAffine_2(long,long,long,double,double)
org.opencv.imgproc.Imgproc: void warpPerspective_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void warpPerspective_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void warpPerspective_2(long,long,long,double,double)
org.opencv.imgproc.Imgproc: void watershed_0(long,long)
org.opencv.imgproc.Imgproc: double[] n_getTextSize(java.lang.String,int,double,int,int[])
org.opencv.imgproc.LineSegmentDetector
org.opencv.imgproc.LineSegmentDetector: int compareSegments_0(long,double,double,long,long,long)
org.opencv.imgproc.LineSegmentDetector: int compareSegments_1(long,double,double,long,long)
org.opencv.imgproc.LineSegmentDetector: void detect_0(long,long,long,long,long,long)
org.opencv.imgproc.LineSegmentDetector: void detect_1(long,long,long)
org.opencv.imgproc.LineSegmentDetector: void drawSegments_0(long,long,long)
org.opencv.imgproc.LineSegmentDetector: void delete(long)
org.opencv.imgproc.Subdiv2D
org.opencv.imgproc.Subdiv2D: long Subdiv2D_0(int,int,int,int)
org.opencv.imgproc.Subdiv2D: long Subdiv2D_1()
org.opencv.imgproc.Subdiv2D: double[] getVertex_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: double[] getVertex_1(long,int)
org.opencv.imgproc.Subdiv2D: int edgeDst_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: int edgeDst_1(long,int)
org.opencv.imgproc.Subdiv2D: int edgeOrg_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: int edgeOrg_1(long,int)
org.opencv.imgproc.Subdiv2D: int findNearest_0(long,double,double,double[])
org.opencv.imgproc.Subdiv2D: int findNearest_1(long,double,double)
org.opencv.imgproc.Subdiv2D: int getEdge_0(long,int,int)
org.opencv.imgproc.Subdiv2D: int insert_0(long,double,double)
org.opencv.imgproc.Subdiv2D: int locate_0(long,double,double,double[],double[])
org.opencv.imgproc.Subdiv2D: int nextEdge_0(long,int)
org.opencv.imgproc.Subdiv2D: int rotateEdge_0(long,int,int)
org.opencv.imgproc.Subdiv2D: int symEdge_0(long,int)
org.opencv.imgproc.Subdiv2D: void getEdgeList_0(long,long)
org.opencv.imgproc.Subdiv2D: void getLeadingEdgeList_0(long,long)
org.opencv.imgproc.Subdiv2D: void getTriangleList_0(long,long)
org.opencv.imgproc.Subdiv2D: void getVoronoiFacetList_0(long,long,long,long)
org.opencv.imgproc.Subdiv2D: void initDelaunay_0(long,int,int,int,int)
org.opencv.imgproc.Subdiv2D: void insert_1(long,long)
org.opencv.imgproc.Subdiv2D: void delete(long)
org.opencv.ml.ANN_MLP
org.opencv.ml.ANN_MLP: long getLayerSizes_0(long)
org.opencv.ml.ANN_MLP: long getWeights_0(long,int)
org.opencv.ml.ANN_MLP: long create_0()
org.opencv.ml.ANN_MLP: long load_0(java.lang.String)
org.opencv.ml.ANN_MLP: double[] getTermCriteria_0(long)
org.opencv.ml.ANN_MLP: double getBackpropMomentumScale_0(long)
org.opencv.ml.ANN_MLP: double getBackpropWeightScale_0(long)
org.opencv.ml.ANN_MLP: double getRpropDW0_0(long)
org.opencv.ml.ANN_MLP: double getRpropDWMax_0(long)
org.opencv.ml.ANN_MLP: double getRpropDWMin_0(long)
org.opencv.ml.ANN_MLP: double getRpropDWMinus_0(long)
org.opencv.ml.ANN_MLP: double getRpropDWPlus_0(long)
org.opencv.ml.ANN_MLP: int getTrainMethod_0(long)
org.opencv.ml.ANN_MLP: void setActivationFunction_0(long,int,double,double)
org.opencv.ml.ANN_MLP: void setActivationFunction_1(long,int)
org.opencv.ml.ANN_MLP: void setBackpropMomentumScale_0(long,double)
org.opencv.ml.ANN_MLP: void setBackpropWeightScale_0(long,double)
org.opencv.ml.ANN_MLP: void setLayerSizes_0(long,long)
org.opencv.ml.ANN_MLP: void setRpropDW0_0(long,double)
org.opencv.ml.ANN_MLP: void setRpropDWMax_0(long,double)
org.opencv.ml.ANN_MLP: void setRpropDWMin_0(long,double)
org.opencv.ml.ANN_MLP: void setRpropDWMinus_0(long,double)
org.opencv.ml.ANN_MLP: void setRpropDWPlus_0(long,double)
org.opencv.ml.ANN_MLP: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.ANN_MLP: void setTrainMethod_0(long,int,double,double)
org.opencv.ml.ANN_MLP: void setTrainMethod_1(long,int)
org.opencv.ml.ANN_MLP: void delete(long)
org.opencv.ml.Boost
org.opencv.ml.Boost: long create_0()
org.opencv.ml.Boost: double getWeightTrimRate_0(long)
org.opencv.ml.Boost: int getBoostType_0(long)
org.opencv.ml.Boost: int getWeakCount_0(long)
org.opencv.ml.Boost: void setBoostType_0(long,int)
org.opencv.ml.Boost: void setWeakCount_0(long,int)
org.opencv.ml.Boost: void setWeightTrimRate_0(long,double)
org.opencv.ml.Boost: void delete(long)
org.opencv.ml.DTrees
org.opencv.ml.DTrees: long getPriors_0(long)
org.opencv.ml.DTrees: long create_0()
org.opencv.ml.DTrees: boolean getTruncatePrunedTree_0(long)
org.opencv.ml.DTrees: boolean getUse1SERule_0(long)
org.opencv.ml.DTrees: boolean getUseSurrogates_0(long)
org.opencv.ml.DTrees: float getRegressionAccuracy_0(long)
org.opencv.ml.DTrees: int getCVFolds_0(long)
org.opencv.ml.DTrees: int getMaxCategories_0(long)
org.opencv.ml.DTrees: int getMaxDepth_0(long)
org.opencv.ml.DTrees: int getMinSampleCount_0(long)
org.opencv.ml.DTrees: void setCVFolds_0(long,int)
org.opencv.ml.DTrees: void setMaxCategories_0(long,int)
org.opencv.ml.DTrees: void setMaxDepth_0(long,int)
org.opencv.ml.DTrees: void setMinSampleCount_0(long,int)
org.opencv.ml.DTrees: void setPriors_0(long,long)
org.opencv.ml.DTrees: void setRegressionAccuracy_0(long,float)
org.opencv.ml.DTrees: void setTruncatePrunedTree_0(long,boolean)
org.opencv.ml.DTrees: void setUse1SERule_0(long,boolean)
org.opencv.ml.DTrees: void setUseSurrogates_0(long,boolean)
org.opencv.ml.DTrees: void delete(long)
org.opencv.ml.EM
org.opencv.ml.EM: long getMeans_0(long)
org.opencv.ml.EM: long getWeights_0(long)
org.opencv.ml.EM: long create_0()
org.opencv.ml.EM: double[] getTermCriteria_0(long)
org.opencv.ml.EM: double[] predict2_0(long,long,long)
org.opencv.ml.EM: boolean trainE_0(long,long,long,long,long,long,long,long)
org.opencv.ml.EM: boolean trainE_1(long,long,long)
org.opencv.ml.EM: boolean trainEM_0(long,long,long,long,long)
org.opencv.ml.EM: boolean trainEM_1(long,long)
org.opencv.ml.EM: boolean trainM_0(long,long,long,long,long,long)
org.opencv.ml.EM: boolean trainM_1(long,long,long)
org.opencv.ml.EM: int getClustersNumber_0(long)
org.opencv.ml.EM: int getCovarianceMatrixType_0(long)
org.opencv.ml.EM: void getCovs_0(long,long)
org.opencv.ml.EM: void setClustersNumber_0(long,int)
org.opencv.ml.EM: void setCovarianceMatrixType_0(long,int)
org.opencv.ml.EM: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.EM: void delete(long)
org.opencv.ml.KNearest
org.opencv.ml.KNearest: long create_0()
org.opencv.ml.KNearest: boolean getIsClassifier_0(long)
org.opencv.ml.KNearest: float findNearest_0(long,long,int,long,long,long)
org.opencv.ml.KNearest: float findNearest_1(long,long,int,long)
org.opencv.ml.KNearest: int getAlgorithmType_0(long)
org.opencv.ml.KNearest: int getDefaultK_0(long)
org.opencv.ml.KNearest: int getEmax_0(long)
org.opencv.ml.KNearest: void setAlgorithmType_0(long,int)
org.opencv.ml.KNearest: void setDefaultK_0(long,int)
org.opencv.ml.KNearest: void setEmax_0(long,int)
org.opencv.ml.KNearest: void setIsClassifier_0(long,boolean)
org.opencv.ml.KNearest: void delete(long)
org.opencv.ml.LogisticRegression
org.opencv.ml.LogisticRegression: long get_learnt_thetas_0(long)
org.opencv.ml.LogisticRegression: long create_0()
org.opencv.ml.LogisticRegression: double[] getTermCriteria_0(long)
org.opencv.ml.LogisticRegression: double getLearningRate_0(long)
org.opencv.ml.LogisticRegression: float predict_0(long,long,long,int)
org.opencv.ml.LogisticRegression: float predict_1(long,long)
org.opencv.ml.LogisticRegression: int getIterations_0(long)
org.opencv.ml.LogisticRegression: int getMiniBatchSize_0(long)
org.opencv.ml.LogisticRegression: int getRegularization_0(long)
org.opencv.ml.LogisticRegression: int getTrainMethod_0(long)
org.opencv.ml.LogisticRegression: void setIterations_0(long,int)
org.opencv.ml.LogisticRegression: void setLearningRate_0(long,double)
org.opencv.ml.LogisticRegression: void setMiniBatchSize_0(long,int)
org.opencv.ml.LogisticRegression: void setRegularization_0(long,int)
org.opencv.ml.LogisticRegression: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.LogisticRegression: void setTrainMethod_0(long,int)
org.opencv.ml.LogisticRegression: void delete(long)
org.opencv.ml.NormalBayesClassifier
org.opencv.ml.NormalBayesClassifier: long create_0()
org.opencv.ml.NormalBayesClassifier: float predictProb_0(long,long,long,long,int)
org.opencv.ml.NormalBayesClassifier: float predictProb_1(long,long,long,long)
org.opencv.ml.NormalBayesClassifier: void delete(long)
org.opencv.ml.RTrees
org.opencv.ml.RTrees: long getVarImportance_0(long)
org.opencv.ml.RTrees: long create_0()
org.opencv.ml.RTrees: double[] getTermCriteria_0(long)
org.opencv.ml.RTrees: boolean getCalculateVarImportance_0(long)
org.opencv.ml.RTrees: int getActiveVarCount_0(long)
org.opencv.ml.RTrees: void setActiveVarCount_0(long,int)
org.opencv.ml.RTrees: void setCalculateVarImportance_0(long,boolean)
org.opencv.ml.RTrees: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.RTrees: void delete(long)
org.opencv.ml.SVM
org.opencv.ml.SVM: long getClassWeights_0(long)
org.opencv.ml.SVM: long getSupportVectors_0(long)
org.opencv.ml.SVM: long getUncompressedSupportVectors_0(long)
org.opencv.ml.SVM: long create_0()
org.opencv.ml.SVM: long load_0(java.lang.String)
org.opencv.ml.SVM: double[] getTermCriteria_0(long)
org.opencv.ml.SVM: double getC_0(long)
org.opencv.ml.SVM: double getCoef0_0(long)
org.opencv.ml.SVM: double getDecisionFunction_0(long,int,long,long)
org.opencv.ml.SVM: double getDegree_0(long)
org.opencv.ml.SVM: double getGamma_0(long)
org.opencv.ml.SVM: double getNu_0(long)
org.opencv.ml.SVM: double getP_0(long)
org.opencv.ml.SVM: int getKernelType_0(long)
org.opencv.ml.SVM: int getType_0(long)
org.opencv.ml.SVM: void setC_0(long,double)
org.opencv.ml.SVM: void setClassWeights_0(long,long)
org.opencv.ml.SVM: void setCoef0_0(long,double)
org.opencv.ml.SVM: void setDegree_0(long,double)
org.opencv.ml.SVM: void setGamma_0(long,double)
org.opencv.ml.SVM: void setKernel_0(long,int)
org.opencv.ml.SVM: void setNu_0(long,double)
org.opencv.ml.SVM: void setP_0(long,double)
org.opencv.ml.SVM: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.SVM: void setType_0(long,int)
org.opencv.ml.SVM: void delete(long)
org.opencv.ml.SVMSGD
org.opencv.ml.SVMSGD: long getWeights_0(long)
org.opencv.ml.SVMSGD: long create_0()
org.opencv.ml.SVMSGD: double[] getTermCriteria_0(long)
org.opencv.ml.SVMSGD: float getInitialStepSize_0(long)
org.opencv.ml.SVMSGD: float getMarginRegularization_0(long)
org.opencv.ml.SVMSGD: float getShift_0(long)
org.opencv.ml.SVMSGD: float getStepDecreasingPower_0(long)
org.opencv.ml.SVMSGD: int getMarginType_0(long)
org.opencv.ml.SVMSGD: int getSvmsgdType_0(long)
org.opencv.ml.SVMSGD: void setInitialStepSize_0(long,float)
org.opencv.ml.SVMSGD: void setMarginRegularization_0(long,float)
org.opencv.ml.SVMSGD: void setMarginType_0(long,int)
org.opencv.ml.SVMSGD: void setOptimalParameters_0(long,int,int)
org.opencv.ml.SVMSGD: void setOptimalParameters_1(long)
org.opencv.ml.SVMSGD: void setStepDecreasingPower_0(long,float)
org.opencv.ml.SVMSGD: void setSvmsgdType_0(long,int)
org.opencv.ml.SVMSGD: void setTermCriteria_0(long,int,int,double)
org.opencv.ml.SVMSGD: void delete(long)
org.opencv.ml.StatModel
org.opencv.ml.StatModel: boolean empty_0(long)
org.opencv.ml.StatModel: boolean isClassifier_0(long)
org.opencv.ml.StatModel: boolean isTrained_0(long)
org.opencv.ml.StatModel: boolean train_0(long,long,int,long)
org.opencv.ml.StatModel: boolean train_1(long,long,int)
org.opencv.ml.StatModel: boolean train_2(long,long)
org.opencv.ml.StatModel: float calcError_0(long,long,boolean,long)
org.opencv.ml.StatModel: float predict_0(long,long,long,int)
org.opencv.ml.StatModel: float predict_1(long,long)
org.opencv.ml.StatModel: int getVarCount_0(long)
org.opencv.ml.StatModel: void delete(long)
org.opencv.ml.TrainData
org.opencv.ml.TrainData: long getCatMap_0(long)
org.opencv.ml.TrainData: long getCatOfs_0(long)
org.opencv.ml.TrainData: long getClassLabels_0(long)
org.opencv.ml.TrainData: long getDefaultSubstValues_0(long)
org.opencv.ml.TrainData: long getMissing_0(long)
org.opencv.ml.TrainData: long getNormCatResponses_0(long)
org.opencv.ml.TrainData: long getResponses_0(long)
org.opencv.ml.TrainData: long getSampleWeights_0(long)
org.opencv.ml.TrainData: long getSamples_0(long)
org.opencv.ml.TrainData: long getSubVector_0(long,long)
org.opencv.ml.TrainData: long getTestNormCatResponses_0(long)
org.opencv.ml.TrainData: long getTestResponses_0(long)
org.opencv.ml.TrainData: long getTestSampleIdx_0(long)
org.opencv.ml.TrainData: long getTestSampleWeights_0(long)
org.opencv.ml.TrainData: long getTestSamples_0(long)
org.opencv.ml.TrainData: long getTrainNormCatResponses_0(long)
org.opencv.ml.TrainData: long getTrainResponses_0(long)
org.opencv.ml.TrainData: long getTrainSampleIdx_0(long)
org.opencv.ml.TrainData: long getTrainSampleWeights_0(long)
org.opencv.ml.TrainData: long getTrainSamples_0(long,int,boolean,boolean)
org.opencv.ml.TrainData: long getTrainSamples_1(long)
org.opencv.ml.TrainData: long getVarIdx_0(long)
org.opencv.ml.TrainData: long getVarSymbolFlags_0(long)
org.opencv.ml.TrainData: long getVarType_0(long)
org.opencv.ml.TrainData: long create_0(long,int,long,long,long,long,long)
org.opencv.ml.TrainData: long create_1(long,int,long)
org.opencv.ml.TrainData: int getCatCount_0(long,int)
org.opencv.ml.TrainData: int getLayout_0(long)
org.opencv.ml.TrainData: int getNAllVars_0(long)
org.opencv.ml.TrainData: int getNSamples_0(long)
org.opencv.ml.TrainData: int getNTestSamples_0(long)
org.opencv.ml.TrainData: int getNTrainSamples_0(long)
org.opencv.ml.TrainData: int getNVars_0(long)
org.opencv.ml.TrainData: int getResponseType_0(long)
org.opencv.ml.TrainData: void getSample_0(long,long,int,float)
org.opencv.ml.TrainData: void getValues_0(long,int,long,float)
org.opencv.ml.TrainData: void setTrainTestSplit_0(long,int,boolean)
org.opencv.ml.TrainData: void setTrainTestSplit_1(long,int)
org.opencv.ml.TrainData: void setTrainTestSplitRatio_0(long,double,boolean)
org.opencv.ml.TrainData: void setTrainTestSplitRatio_1(long,double)
org.opencv.ml.TrainData: void shuffleTrainTest_0(long)
org.opencv.ml.TrainData: void delete(long)
org.opencv.objdetect.BaseCascadeClassifier
org.opencv.objdetect.BaseCascadeClassifier: void delete(long)
org.opencv.objdetect.CascadeClassifier
org.opencv.objdetect.CascadeClassifier: long CascadeClassifier_0(java.lang.String)
org.opencv.objdetect.CascadeClassifier: long CascadeClassifier_1()
org.opencv.objdetect.CascadeClassifier: double[] getOriginalWindowSize_0(long)
org.opencv.objdetect.CascadeClassifier: boolean convert_0(java.lang.String,java.lang.String)
org.opencv.objdetect.CascadeClassifier: boolean empty_0(long)
org.opencv.objdetect.CascadeClassifier: boolean isOldFormatCascade_0(long)
org.opencv.objdetect.CascadeClassifier: boolean load_0(long,java.lang.String)
org.opencv.objdetect.CascadeClassifier: int getFeatureType_0(long)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_0(long,long,long,double,int,int,double,double,double,double)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_1(long,long,long)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale2_0(long,long,long,long,double,int,int,double,double,double,double)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale2_1(long,long,long,long)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale3_0(long,long,long,long,long,double,int,int,double,double,double,double,boolean)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale3_1(long,long,long,long,long)
org.opencv.objdetect.CascadeClassifier: void delete(long)
org.opencv.objdetect.HOGDescriptor
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_0(double,double,double,double,double,double,double,double,int,int,double,int,double,boolean,int,boolean)
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_1(double,double,double,double,double,double,double,double,int)
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_2(java.lang.String)
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_3()
org.opencv.objdetect.HOGDescriptor: boolean checkDetectorSize_0(long)
org.opencv.objdetect.HOGDescriptor: boolean load_0(long,java.lang.String,java.lang.String)
org.opencv.objdetect.HOGDescriptor: boolean load_1(long,java.lang.String)
org.opencv.objdetect.HOGDescriptor: double getWinSigma_0(long)
org.opencv.objdetect.HOGDescriptor: long getDescriptorSize_0(long)
org.opencv.objdetect.HOGDescriptor: long getDaimlerPeopleDetector_0()
org.opencv.objdetect.HOGDescriptor: long getDefaultPeopleDetector_0()
org.opencv.objdetect.HOGDescriptor: void compute_0(long,long,long,double,double,double,double,long)
org.opencv.objdetect.HOGDescriptor: void compute_1(long,long,long)
org.opencv.objdetect.HOGDescriptor: void computeGradient_0(long,long,long,long,double,double,double,double)
org.opencv.objdetect.HOGDescriptor: void computeGradient_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: void detect_0(long,long,long,long,double,double,double,double,double,long)
org.opencv.objdetect.HOGDescriptor: void detect_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: void detectMultiScale_0(long,long,long,long,double,double,double,double,double,double,double,boolean)
org.opencv.objdetect.HOGDescriptor: void detectMultiScale_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: void save_0(long,java.lang.String,java.lang.String)
org.opencv.objdetect.HOGDescriptor: void save_1(long,java.lang.String)
org.opencv.objdetect.HOGDescriptor: void setSVMDetector_0(long,long)
org.opencv.objdetect.HOGDescriptor: double[] get_winSize_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_blockSize_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_blockStride_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_cellSize_0(long)
org.opencv.objdetect.HOGDescriptor: int get_nbins_0(long)
org.opencv.objdetect.HOGDescriptor: int get_derivAperture_0(long)
org.opencv.objdetect.HOGDescriptor: double get_winSigma_0(long)
org.opencv.objdetect.HOGDescriptor: int get_histogramNormType_0(long)
org.opencv.objdetect.HOGDescriptor: double get_L2HysThreshold_0(long)
org.opencv.objdetect.HOGDescriptor: boolean get_gammaCorrection_0(long)
org.opencv.objdetect.HOGDescriptor: long get_svmDetector_0(long)
org.opencv.objdetect.HOGDescriptor: int get_nlevels_0(long)
org.opencv.objdetect.HOGDescriptor: boolean get_signedGradient_0(long)
org.opencv.objdetect.HOGDescriptor: void delete(long)
org.opencv.objdetect.Objdetect
org.opencv.objdetect.Objdetect: void groupRectangles_0(long,long,int,double)
org.opencv.objdetect.Objdetect: void groupRectangles_1(long,long,int)
org.opencv.photo.AlignExposures
org.opencv.photo.AlignExposures: void process_0(long,long,long,long,long)
org.opencv.photo.AlignExposures: void delete(long)
org.opencv.photo.AlignMTB
org.opencv.photo.AlignMTB: double[] calculateShift_0(long,long,long)
org.opencv.photo.AlignMTB: boolean getCut_0(long)
org.opencv.photo.AlignMTB: int getExcludeRange_0(long)
org.opencv.photo.AlignMTB: int getMaxBits_0(long)
org.opencv.photo.AlignMTB: void computeBitmaps_0(long,long,long,long)
org.opencv.photo.AlignMTB: void process_0(long,long,long,long,long)
org.opencv.photo.AlignMTB: void process_1(long,long,long)
org.opencv.photo.AlignMTB: void setCut_0(long,boolean)
org.opencv.photo.AlignMTB: void setExcludeRange_0(long,int)
org.opencv.photo.AlignMTB: void setMaxBits_0(long,int)
org.opencv.photo.AlignMTB: void shiftMat_0(long,long,long,double,double)
org.opencv.photo.AlignMTB: void delete(long)
org.opencv.photo.CalibrateCRF
org.opencv.photo.CalibrateCRF: void process_0(long,long,long,long)
org.opencv.photo.CalibrateCRF: void delete(long)
org.opencv.photo.CalibrateDebevec
org.opencv.photo.CalibrateDebevec: boolean getRandom_0(long)
org.opencv.photo.CalibrateDebevec: float getLambda_0(long)
org.opencv.photo.CalibrateDebevec: int getSamples_0(long)
org.opencv.photo.CalibrateDebevec: void setLambda_0(long,float)
org.opencv.photo.CalibrateDebevec: void setRandom_0(long,boolean)
org.opencv.photo.CalibrateDebevec: void setSamples_0(long,int)
org.opencv.photo.CalibrateDebevec: void delete(long)
org.opencv.photo.CalibrateRobertson
org.opencv.photo.CalibrateRobertson: long getRadiance_0(long)
org.opencv.photo.CalibrateRobertson: float getThreshold_0(long)
org.opencv.photo.CalibrateRobertson: int getMaxIter_0(long)
org.opencv.photo.CalibrateRobertson: void setMaxIter_0(long,int)
org.opencv.photo.CalibrateRobertson: void setThreshold_0(long,float)
org.opencv.photo.CalibrateRobertson: void delete(long)
org.opencv.photo.MergeDebevec
org.opencv.photo.MergeDebevec: void process_0(long,long,long,long,long)
org.opencv.photo.MergeDebevec: void process_1(long,long,long,long)
org.opencv.photo.MergeDebevec: void delete(long)
org.opencv.photo.MergeExposures
org.opencv.photo.MergeExposures: void process_0(long,long,long,long,long)
org.opencv.photo.MergeExposures: void delete(long)
org.opencv.photo.MergeMertens
org.opencv.photo.MergeMertens: float getContrastWeight_0(long)
org.opencv.photo.MergeMertens: float getExposureWeight_0(long)
org.opencv.photo.MergeMertens: float getSaturationWeight_0(long)
org.opencv.photo.MergeMertens: void process_0(long,long,long,long,long)
org.opencv.photo.MergeMertens: void process_1(long,long,long)
org.opencv.photo.MergeMertens: void setContrastWeight_0(long,float)
org.opencv.photo.MergeMertens: void setExposureWeight_0(long,float)
org.opencv.photo.MergeMertens: void setSaturationWeight_0(long,float)
org.opencv.photo.MergeMertens: void delete(long)
org.opencv.photo.MergeRobertson
org.opencv.photo.MergeRobertson: void process_0(long,long,long,long,long)
org.opencv.photo.MergeRobertson: void process_1(long,long,long,long)
org.opencv.photo.MergeRobertson: void delete(long)
org.opencv.photo.Photo
org.opencv.photo.Photo: long createAlignMTB_0(int,int,boolean)
org.opencv.photo.Photo: long createAlignMTB_1()
org.opencv.photo.Photo: long createCalibrateDebevec_0(int,float,boolean)
org.opencv.photo.Photo: long createCalibrateDebevec_1()
org.opencv.photo.Photo: long createCalibrateRobertson_0(int,float)
org.opencv.photo.Photo: long createCalibrateRobertson_1()
org.opencv.photo.Photo: long createMergeDebevec_0()
org.opencv.photo.Photo: long createMergeMertens_0(float,float,float)
org.opencv.photo.Photo: long createMergeMertens_1()
org.opencv.photo.Photo: long createMergeRobertson_0()
org.opencv.photo.Photo: long createTonemap_0(float)
org.opencv.photo.Photo: long createTonemap_1()
org.opencv.photo.Photo: long createTonemapDrago_0(float,float,float)
org.opencv.photo.Photo: long createTonemapDrago_1()
org.opencv.photo.Photo: long createTonemapDurand_0(float,float,float,float,float)
org.opencv.photo.Photo: long createTonemapDurand_1()
org.opencv.photo.Photo: long createTonemapMantiuk_0(float,float,float)
org.opencv.photo.Photo: long createTonemapMantiuk_1()
org.opencv.photo.Photo: long createTonemapReinhard_0(float,float,float,float)
org.opencv.photo.Photo: long createTonemapReinhard_1()
org.opencv.photo.Photo: void colorChange_0(long,long,long,float,float,float)
org.opencv.photo.Photo: void colorChange_1(long,long,long)
org.opencv.photo.Photo: void decolor_0(long,long,long)
org.opencv.photo.Photo: void denoise_TVL1_0(long,long,double,int)
org.opencv.photo.Photo: void denoise_TVL1_1(long,long)
org.opencv.photo.Photo: void detailEnhance_0(long,long,float,float)
org.opencv.photo.Photo: void detailEnhance_1(long,long)
org.opencv.photo.Photo: void edgePreservingFilter_0(long,long,int,float,float)
org.opencv.photo.Photo: void edgePreservingFilter_1(long,long)
org.opencv.photo.Photo: void fastNlMeansDenoising_0(long,long,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoising_1(long,long)
org.opencv.photo.Photo: void fastNlMeansDenoising_2(long,long,long,int,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoising_3(long,long,long)
org.opencv.photo.Photo: void fastNlMeansDenoisingColored_0(long,long,float,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingColored_1(long,long)
org.opencv.photo.Photo: void fastNlMeansDenoisingColoredMulti_0(long,long,int,int,float,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingColoredMulti_1(long,long,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_0(long,long,int,int,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_1(long,long,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_2(long,long,int,int,long,int,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_3(long,long,int,int,long)
org.opencv.photo.Photo: void illuminationChange_0(long,long,long,float,float)
org.opencv.photo.Photo: void illuminationChange_1(long,long,long)
org.opencv.photo.Photo: void inpaint_0(long,long,long,double,int)
org.opencv.photo.Photo: void pencilSketch_0(long,long,long,float,float,float)
org.opencv.photo.Photo: void pencilSketch_1(long,long,long)
org.opencv.photo.Photo: void seamlessClone_0(long,long,long,double,double,long,int)
org.opencv.photo.Photo: void stylization_0(long,long,float,float)
org.opencv.photo.Photo: void stylization_1(long,long)
org.opencv.photo.Photo: void textureFlattening_0(long,long,long,float,float,int)
org.opencv.photo.Photo: void textureFlattening_1(long,long,long)
org.opencv.photo.Tonemap
org.opencv.photo.Tonemap: float getGamma_0(long)
org.opencv.photo.Tonemap: void process_0(long,long,long)
org.opencv.photo.Tonemap: void setGamma_0(long,float)
org.opencv.photo.Tonemap: void delete(long)
org.opencv.photo.TonemapDrago
org.opencv.photo.TonemapDrago: float getBias_0(long)
org.opencv.photo.TonemapDrago: float getSaturation_0(long)
org.opencv.photo.TonemapDrago: void setBias_0(long,float)
org.opencv.photo.TonemapDrago: void setSaturation_0(long,float)
org.opencv.photo.TonemapDrago: void delete(long)
org.opencv.photo.TonemapDurand
org.opencv.photo.TonemapDurand: float getContrast_0(long)
org.opencv.photo.TonemapDurand: float getSaturation_0(long)
org.opencv.photo.TonemapDurand: float getSigmaColor_0(long)
org.opencv.photo.TonemapDurand: float getSigmaSpace_0(long)
org.opencv.photo.TonemapDurand: void setContrast_0(long,float)
org.opencv.photo.TonemapDurand: void setSaturation_0(long,float)
org.opencv.photo.TonemapDurand: void setSigmaColor_0(long,float)
org.opencv.photo.TonemapDurand: void setSigmaSpace_0(long,float)
org.opencv.photo.TonemapDurand: void delete(long)
org.opencv.photo.TonemapMantiuk
org.opencv.photo.TonemapMantiuk: float getSaturation_0(long)
org.opencv.photo.TonemapMantiuk: float getScale_0(long)
org.opencv.photo.TonemapMantiuk: void setSaturation_0(long,float)
org.opencv.photo.TonemapMantiuk: void setScale_0(long,float)
org.opencv.photo.TonemapMantiuk: void delete(long)
org.opencv.photo.TonemapReinhard
org.opencv.photo.TonemapReinhard: float getColorAdaptation_0(long)
org.opencv.photo.TonemapReinhard: float getIntensity_0(long)
org.opencv.photo.TonemapReinhard: float getLightAdaptation_0(long)
org.opencv.photo.TonemapReinhard: void setColorAdaptation_0(long,float)
org.opencv.photo.TonemapReinhard: void setIntensity_0(long,float)
org.opencv.photo.TonemapReinhard: void setLightAdaptation_0(long,float)
org.opencv.photo.TonemapReinhard: void delete(long)
org.opencv.video.BackgroundSubtractor
org.opencv.video.BackgroundSubtractor: void apply_0(long,long,long,double)
org.opencv.video.BackgroundSubtractor: void apply_1(long,long,long)
org.opencv.video.BackgroundSubtractor: void getBackgroundImage_0(long,long)
org.opencv.video.BackgroundSubtractor: void delete(long)
org.opencv.video.BackgroundSubtractorKNN
org.opencv.video.BackgroundSubtractorKNN: boolean getDetectShadows_0(long)
org.opencv.video.BackgroundSubtractorKNN: double getDist2Threshold_0(long)
org.opencv.video.BackgroundSubtractorKNN: double getShadowThreshold_0(long)
org.opencv.video.BackgroundSubtractorKNN: int getHistory_0(long)
org.opencv.video.BackgroundSubtractorKNN: int getNSamples_0(long)
org.opencv.video.BackgroundSubtractorKNN: int getShadowValue_0(long)
org.opencv.video.BackgroundSubtractorKNN: int getkNNSamples_0(long)
org.opencv.video.BackgroundSubtractorKNN: void setDetectShadows_0(long,boolean)
org.opencv.video.BackgroundSubtractorKNN: void setDist2Threshold_0(long,double)
org.opencv.video.BackgroundSubtractorKNN: void setHistory_0(long,int)
org.opencv.video.BackgroundSubtractorKNN: void setNSamples_0(long,int)
org.opencv.video.BackgroundSubtractorKNN: void setShadowThreshold_0(long,double)
org.opencv.video.BackgroundSubtractorKNN: void setShadowValue_0(long,int)
org.opencv.video.BackgroundSubtractorKNN: void setkNNSamples_0(long,int)
org.opencv.video.BackgroundSubtractorKNN: void delete(long)
org.opencv.video.BackgroundSubtractorMOG2
org.opencv.video.BackgroundSubtractorMOG2: boolean getDetectShadows_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getBackgroundRatio_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getComplexityReductionThreshold_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getShadowThreshold_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getVarInit_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getVarMax_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getVarMin_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getVarThreshold_0(long)
org.opencv.video.BackgroundSubtractorMOG2: double getVarThresholdGen_0(long)
org.opencv.video.BackgroundSubtractorMOG2: int getHistory_0(long)
org.opencv.video.BackgroundSubtractorMOG2: int getNMixtures_0(long)
org.opencv.video.BackgroundSubtractorMOG2: int getShadowValue_0(long)
org.opencv.video.BackgroundSubtractorMOG2: void setBackgroundRatio_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setComplexityReductionThreshold_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setDetectShadows_0(long,boolean)
org.opencv.video.BackgroundSubtractorMOG2: void setHistory_0(long,int)
org.opencv.video.BackgroundSubtractorMOG2: void setNMixtures_0(long,int)
org.opencv.video.BackgroundSubtractorMOG2: void setShadowThreshold_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setShadowValue_0(long,int)
org.opencv.video.BackgroundSubtractorMOG2: void setVarInit_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setVarMax_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setVarMin_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setVarThreshold_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void setVarThresholdGen_0(long,double)
org.opencv.video.BackgroundSubtractorMOG2: void delete(long)
org.opencv.video.DenseOpticalFlow
org.opencv.video.DenseOpticalFlow: void calc_0(long,long,long,long)
org.opencv.video.DenseOpticalFlow: void collectGarbage_0(long)
org.opencv.video.DenseOpticalFlow: void delete(long)
org.opencv.video.DualTVL1OpticalFlow
org.opencv.video.DualTVL1OpticalFlow: long create_0(double,double,double,int,int,double,int,int,double,double,int,boolean)
org.opencv.video.DualTVL1OpticalFlow: long create_1()
org.opencv.video.DualTVL1OpticalFlow: boolean getUseInitialFlow_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getEpsilon_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getGamma_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getLambda_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getScaleStep_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getTau_0(long)
org.opencv.video.DualTVL1OpticalFlow: double getTheta_0(long)
org.opencv.video.DualTVL1OpticalFlow: int getInnerIterations_0(long)
org.opencv.video.DualTVL1OpticalFlow: int getMedianFiltering_0(long)
org.opencv.video.DualTVL1OpticalFlow: int getOuterIterations_0(long)
org.opencv.video.DualTVL1OpticalFlow: int getScalesNumber_0(long)
org.opencv.video.DualTVL1OpticalFlow: int getWarpingsNumber_0(long)
org.opencv.video.DualTVL1OpticalFlow: void setEpsilon_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setGamma_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setInnerIterations_0(long,int)
org.opencv.video.DualTVL1OpticalFlow: void setLambda_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setMedianFiltering_0(long,int)
org.opencv.video.DualTVL1OpticalFlow: void setOuterIterations_0(long,int)
org.opencv.video.DualTVL1OpticalFlow: void setScaleStep_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setScalesNumber_0(long,int)
org.opencv.video.DualTVL1OpticalFlow: void setTau_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setTheta_0(long,double)
org.opencv.video.DualTVL1OpticalFlow: void setUseInitialFlow_0(long,boolean)
org.opencv.video.DualTVL1OpticalFlow: void setWarpingsNumber_0(long,int)
org.opencv.video.DualTVL1OpticalFlow: void delete(long)
org.opencv.video.FarnebackOpticalFlow
org.opencv.video.FarnebackOpticalFlow: long create_0(int,double,boolean,int,int,int,double,int)
org.opencv.video.FarnebackOpticalFlow: long create_1()
org.opencv.video.FarnebackOpticalFlow: boolean getFastPyramids_0(long)
org.opencv.video.FarnebackOpticalFlow: double getPolySigma_0(long)
org.opencv.video.FarnebackOpticalFlow: double getPyrScale_0(long)
org.opencv.video.FarnebackOpticalFlow: int getFlags_0(long)
org.opencv.video.FarnebackOpticalFlow: int getNumIters_0(long)
org.opencv.video.FarnebackOpticalFlow: int getNumLevels_0(long)
org.opencv.video.FarnebackOpticalFlow: int getPolyN_0(long)
org.opencv.video.FarnebackOpticalFlow: int getWinSize_0(long)
org.opencv.video.FarnebackOpticalFlow: void setFastPyramids_0(long,boolean)
org.opencv.video.FarnebackOpticalFlow: void setFlags_0(long,int)
org.opencv.video.FarnebackOpticalFlow: void setNumIters_0(long,int)
org.opencv.video.FarnebackOpticalFlow: void setNumLevels_0(long,int)
org.opencv.video.FarnebackOpticalFlow: void setPolyN_0(long,int)
org.opencv.video.FarnebackOpticalFlow: void setPolySigma_0(long,double)
org.opencv.video.FarnebackOpticalFlow: void setPyrScale_0(long,double)
org.opencv.video.FarnebackOpticalFlow: void setWinSize_0(long,int)
org.opencv.video.FarnebackOpticalFlow: void delete(long)
org.opencv.video.KalmanFilter
org.opencv.video.KalmanFilter: long KalmanFilter_0(int,int,int,int)
org.opencv.video.KalmanFilter: long KalmanFilter_1(int,int)
org.opencv.video.KalmanFilter: long KalmanFilter_2()
org.opencv.video.KalmanFilter: long correct_0(long,long)
org.opencv.video.KalmanFilter: long predict_0(long,long)
org.opencv.video.KalmanFilter: long predict_1(long)
org.opencv.video.KalmanFilter: long get_statePre_0(long)
org.opencv.video.KalmanFilter: void set_statePre_0(long,long)
org.opencv.video.KalmanFilter: long get_statePost_0(long)
org.opencv.video.KalmanFilter: void set_statePost_0(long,long)
org.opencv.video.KalmanFilter: long get_transitionMatrix_0(long)
org.opencv.video.KalmanFilter: void set_transitionMatrix_0(long,long)
org.opencv.video.KalmanFilter: long get_controlMatrix_0(long)
org.opencv.video.KalmanFilter: void set_controlMatrix_0(long,long)
org.opencv.video.KalmanFilter: long get_measurementMatrix_0(long)
org.opencv.video.KalmanFilter: void set_measurementMatrix_0(long,long)
org.opencv.video.KalmanFilter: long get_processNoiseCov_0(long)
org.opencv.video.KalmanFilter: void set_processNoiseCov_0(long,long)
org.opencv.video.KalmanFilter: long get_measurementNoiseCov_0(long)
org.opencv.video.KalmanFilter: void set_measurementNoiseCov_0(long,long)
org.opencv.video.KalmanFilter: long get_errorCovPre_0(long)
org.opencv.video.KalmanFilter: void set_errorCovPre_0(long,long)
org.opencv.video.KalmanFilter: long get_gain_0(long)
org.opencv.video.KalmanFilter: void set_gain_0(long,long)
org.opencv.video.KalmanFilter: long get_errorCovPost_0(long)
org.opencv.video.KalmanFilter: void set_errorCovPost_0(long,long)
org.opencv.video.KalmanFilter: void delete(long)
org.opencv.video.SparseOpticalFlow
org.opencv.video.SparseOpticalFlow: void calc_0(long,long,long,long,long,long,long)
org.opencv.video.SparseOpticalFlow: void calc_1(long,long,long,long,long,long)
org.opencv.video.SparseOpticalFlow: void delete(long)
org.opencv.video.SparsePyrLKOpticalFlow
org.opencv.video.SparsePyrLKOpticalFlow: long create_0(double,double,int,int,int,double,int,double)
org.opencv.video.SparsePyrLKOpticalFlow: long create_1()
org.opencv.video.SparsePyrLKOpticalFlow: double[] getWinSize_0(long)
org.opencv.video.SparsePyrLKOpticalFlow: double[] getTermCriteria_0(long)
org.opencv.video.SparsePyrLKOpticalFlow: double getMinEigThreshold_0(long)
org.opencv.video.SparsePyrLKOpticalFlow: int getFlags_0(long)
org.opencv.video.SparsePyrLKOpticalFlow: int getMaxLevel_0(long)
org.opencv.video.SparsePyrLKOpticalFlow: void setFlags_0(long,int)
org.opencv.video.SparsePyrLKOpticalFlow: void setMaxLevel_0(long,int)
org.opencv.video.SparsePyrLKOpticalFlow: void setMinEigThreshold_0(long,double)
org.opencv.video.SparsePyrLKOpticalFlow: void setTermCriteria_0(long,int,int,double)
org.opencv.video.SparsePyrLKOpticalFlow: void setWinSize_0(long,double,double)
org.opencv.video.SparsePyrLKOpticalFlow: void delete(long)
org.opencv.video.Video
org.opencv.video.Video: long estimateRigidTransform_0(long,long,boolean)
org.opencv.video.Video: long createBackgroundSubtractorKNN_0(int,double,boolean)
org.opencv.video.Video: long createBackgroundSubtractorKNN_1()
org.opencv.video.Video: long createBackgroundSubtractorMOG2_0(int,double,boolean)
org.opencv.video.Video: long createBackgroundSubtractorMOG2_1()
org.opencv.video.Video: long createOptFlow_DualTVL1_0()
org.opencv.video.Video: double[] CamShift_0(long,int,int,int,int,double[],int,int,double)
org.opencv.video.Video: double findTransformECC_0(long,long,long,int,int,int,double,long)
org.opencv.video.Video: double findTransformECC_1(long,long,long,int)
org.opencv.video.Video: double findTransformECC_2(long,long,long)
org.opencv.video.Video: int buildOpticalFlowPyramid_0(long,long,double,double,int,boolean,int,int,boolean)
org.opencv.video.Video: int buildOpticalFlowPyramid_1(long,long,double,double,int)
org.opencv.video.Video: int meanShift_0(long,int,int,int,int,double[],int,int,double)
org.opencv.video.Video: void calcOpticalFlowFarneback_0(long,long,long,double,int,int,int,int,double,int)
org.opencv.video.Video: void calcOpticalFlowPyrLK_0(long,long,long,long,long,long,double,double,int,int,int,double,int,double)
org.opencv.video.Video: void calcOpticalFlowPyrLK_1(long,long,long,long,long,long,double,double,int)
org.opencv.video.Video: void calcOpticalFlowPyrLK_2(long,long,long,long,long,long)
org.opencv.videoio.VideoCapture
org.opencv.videoio.VideoCapture: long VideoCapture_0(java.lang.String,int)
org.opencv.videoio.VideoCapture: long VideoCapture_1(java.lang.String)
org.opencv.videoio.VideoCapture: long VideoCapture_2(int)
org.opencv.videoio.VideoCapture: long VideoCapture_3()
org.opencv.videoio.VideoCapture: boolean grab_0(long)
org.opencv.videoio.VideoCapture: boolean isOpened_0(long)
org.opencv.videoio.VideoCapture: boolean open_0(long,java.lang.String,int)
org.opencv.videoio.VideoCapture: boolean open_1(long,java.lang.String)
org.opencv.videoio.VideoCapture: boolean open_2(long,int,int)
org.opencv.videoio.VideoCapture: boolean open_3(long,int)
org.opencv.videoio.VideoCapture: boolean read_0(long,long)
org.opencv.videoio.VideoCapture: boolean retrieve_0(long,long,int)
org.opencv.videoio.VideoCapture: boolean retrieve_1(long,long)
org.opencv.videoio.VideoCapture: boolean set_0(long,int,double)
org.opencv.videoio.VideoCapture: double get_0(long,int)
org.opencv.videoio.VideoCapture: void release_0(long)
org.opencv.videoio.VideoCapture: void delete(long)
org.opencv.videoio.VideoWriter
org.opencv.videoio.VideoWriter: long VideoWriter_0(java.lang.String,int,double,double,double,boolean)
org.opencv.videoio.VideoWriter: long VideoWriter_1(java.lang.String,int,double,double,double)
org.opencv.videoio.VideoWriter: long VideoWriter_2()
org.opencv.videoio.VideoWriter: boolean isOpened_0(long)
org.opencv.videoio.VideoWriter: boolean open_0(long,java.lang.String,int,double,double,double,boolean)
org.opencv.videoio.VideoWriter: boolean open_1(long,java.lang.String,int,double,double,double)
org.opencv.videoio.VideoWriter: boolean set_0(long,int,double)
org.opencv.videoio.VideoWriter: double get_0(long,int)
org.opencv.videoio.VideoWriter: int fourcc_0(char,char,char,char)
org.opencv.videoio.VideoWriter: void release_0(long)
org.opencv.videoio.VideoWriter: void write_0(long,long)
org.opencv.videoio.VideoWriter: void delete(long)
